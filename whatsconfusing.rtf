{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;}
{\*\expandedcolortbl;;\cssrgb\c6700\c6700\c6700;}
\margl1440\margr1440\vieww9120\viewh6000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\fs28 \cf2 I think one of the most confusing things about this repo, for agents anyway are the three tiers of code (core, ffi and api) and we end up getting duplicate methods everywhere. i basically am thinking how can we reduce the core even more? can we create these modular 'core' traits and then subclass it to all these extra structs like subgraph -> componentsubgraph or neighborhoodsubgraph that have custom methods and attributes. that may only need to be implemented in the ffi. ok so how about this. instead of a plan we need a big doc, a primer to the how the infrastructure works. and we need a team of personas that handle each part, to start the visioneer (the systems architect) aka dr. v or just v, which manages the three managers of the repo (the core manager, the ffi manager, the api manager) each with their requirements, desires, needs and protocols, we have a safety officer implementing the safety and memory protocols, a style expert and code stylist - drawing from community norms and standards to influence good looking code and documentation, and two sides of engineers- one building the fine details of methods and algorithms - the other like the fool with a head in the clouds, thinking of the grand vision: a repo with development for years and aspirations to create a grand graph library that will be the foundation for algorithms to come. Ok so let\'92s create a document for each persona, with a full profile and editable description. If you need help to understand the initial architecture see /docs and /documentation}