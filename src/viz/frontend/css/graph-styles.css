/**
 * üé® Phase 9: Professional Node/Edge Styling
 * 
 * Advanced styling for graph elements in Groggy Graph Visualization
 * Provides beautiful, professional styling for nodes, edges, and graph interactions
 * 
 * Features:
 * - Multiple node types and styles
 * - Professional edge rendering
 * - Interactive state styling
 * - Theme-aware element styling
 * - Performance-optimized rendering
 * - Accessibility considerations
 */

/* ==========================================================================
   GRAPH CANVAS STYLING
   ========================================================================== */

.graph-canvas {
    background-color: var(--graph-background-color, var(--color-background-secondary));
    background-image: 
        radial-gradient(circle at 1px 1px, var(--graph-grid-color, var(--color-border-light)) 1px, transparent 0);
    background-size: 20px 20px;
    cursor: grab;
    user-select: none;
    -webkit-user-select: none;
    transition: background-color var(--transition-normal) ease-out;
}

.graph-canvas:active {
    cursor: grabbing;
}

.graph-canvas.panning {
    cursor: grabbing;
}

.graph-canvas.selecting {
    cursor: crosshair;
}

/* High-DPI display optimizations */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .graph-canvas {
        background-size: 10px 10px;
    }
}

/* ==========================================================================
   NODE STYLING SYSTEM
   ========================================================================== */

/* Base node styles */
.graph-node {
    cursor: pointer;
    transition: all var(--transition-fast) ease-out;
    transform-origin: center;
}

/* Node types */
.graph-node.type-user {
    --node-color: var(--color-primary);
    --node-icon: 'üë§';
    --node-shape: circle;
}

.graph-node.type-project {
    --node-color: var(--color-secondary);
    --node-icon: 'üìÅ';
    --node-shape: square;
}

.graph-node.type-organization {
    --node-color: var(--color-info);
    --node-icon: 'üè¢';
    --node-shape: diamond;
}

.graph-node.type-document {
    --node-color: var(--color-warning);
    --node-icon: 'üìÑ';
    --node-shape: rounded-square;
}

.graph-node.type-system {
    --node-color: var(--color-danger);
    --node-icon: '‚öôÔ∏è';
    --node-shape: hexagon;
}

/* Node size variations */
.graph-node.size-small {
    --node-radius: 6px;
    --node-font-size: 10px;
    --node-stroke-width: 1px;
}

.graph-node.size-medium {
    --node-radius: 8px;
    --node-font-size: 12px;
    --node-stroke-width: 2px;
}

.graph-node.size-large {
    --node-radius: 12px;
    --node-font-size: 14px;
    --node-stroke-width: 2px;
}

.graph-node.size-extra-large {
    --node-radius: 16px;
    --node-font-size: 16px;
    --node-stroke-width: 3px;
}

/* Node importance levels */
.graph-node.importance-low {
    opacity: 0.7;
    --node-stroke-width: 1px;
}

.graph-node.importance-medium {
    opacity: 0.85;
    --node-stroke-width: 2px;
}

.graph-node.importance-high {
    opacity: 1;
    --node-stroke-width: 2px;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
}

.graph-node.importance-critical {
    opacity: 1;
    --node-stroke-width: 3px;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
    animation: pulse 2s ease-in-out infinite;
}

/* Node states */
.graph-node.state-active {
    --node-color: var(--color-success);
    box-shadow: 0 0 8px var(--color-success);
}

.graph-node.state-inactive {
    --node-color: var(--color-text-tertiary);
    opacity: 0.5;
}

.graph-node.state-error {
    --node-color: var(--color-danger);
    animation: errorShake 0.5s ease-out;
}

.graph-node.state-warning {
    --node-color: var(--color-warning);
    animation: pulse 1.5s ease-in-out infinite;
}

.graph-node.state-processing {
    --node-color: var(--color-info);
    animation: spin 2s linear infinite;
}

/* Node interaction states */
.graph-node:hover {
    transform: scale(1.1);
    filter: brightness(1.1) drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
    z-index: 10;
}

.graph-node.selected {
    transform: scale(1.15);
    --node-stroke-width: 3px;
    --node-stroke-color: var(--graph-selection-color, var(--color-primary));
    filter: brightness(1.2) drop-shadow(0 6px 12px rgba(0, 0, 0, 0.3));
    z-index: 20;
    animation: nodeSelect 0.3s ease-out;
}

.graph-node.highlighted {
    --node-stroke-color: var(--graph-highlight-color, var(--color-success));
    animation: nodeHighlight 1s ease-in-out infinite;
}

.graph-node.dimmed {
    opacity: 0.3;
    filter: grayscale(0.5);
}

.graph-node.hidden {
    opacity: 0;
    transform: scale(0);
    pointer-events: none;
}

/* Node focus state for keyboard navigation */
.graph-node:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 4px;
}

/* ==========================================================================
   EDGE STYLING SYSTEM
   ========================================================================== */

/* Base edge styles */
.graph-edge {
    cursor: pointer;
    transition: all var(--transition-fast) ease-out;
    stroke-linecap: round;
    stroke-linejoin: round;
}

/* Edge types */
.graph-edge.type-relationship {
    --edge-color: var(--color-text-tertiary);
    --edge-width: 2px;
    --edge-style: solid;
}

.graph-edge.type-dependency {
    --edge-color: var(--color-primary);
    --edge-width: 2px;
    --edge-style: dashed;
    stroke-dasharray: 5,5;
}

.graph-edge.type-hierarchy {
    --edge-color: var(--color-secondary);
    --edge-width: 3px;
    --edge-style: solid;
}

.graph-edge.type-association {
    --edge-color: var(--color-info);
    --edge-width: 1px;
    --edge-style: dotted;
    stroke-dasharray: 2,3;
}

.graph-edge.type-flow {
    --edge-color: var(--color-warning);
    --edge-width: 2px;
    --edge-style: solid;
    marker-end: url(#arrowhead);
}

/* Edge strength/weight */
.graph-edge.weight-weak {
    --edge-width: 1px;
    opacity: 0.5;
}

.graph-edge.weight-normal {
    --edge-width: 2px;
    opacity: 0.7;
}

.graph-edge.weight-strong {
    --edge-width: 3px;
    opacity: 0.9;
}

.graph-edge.weight-very-strong {
    --edge-width: 4px;
    opacity: 1;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));
}

/* Edge directions */
.graph-edge.direction-bidirectional {
    marker-start: url(#arrowhead);
    marker-end: url(#arrowhead);
}

.graph-edge.direction-incoming {
    marker-start: url(#arrowhead);
}

.graph-edge.direction-outgoing {
    marker-end: url(#arrowhead);
}

/* Edge states */
.graph-edge.state-active {
    --edge-color: var(--color-success);
    --edge-width: 3px;
    animation: edgeFlow 2s linear infinite;
}

.graph-edge.state-inactive {
    opacity: 0.3;
    --edge-color: var(--color-text-disabled);
}

.graph-edge.state-error {
    --edge-color: var(--color-danger);
    animation: edgeError 0.5s ease-out;
}

/* Edge interaction states */
.graph-edge:hover {
    --edge-width: calc(var(--edge-width) + 1px);
    opacity: 1;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    z-index: 5;
}

.graph-edge.selected {
    --edge-color: var(--graph-selection-color, var(--color-primary));
    --edge-width: calc(var(--edge-width) + 2px);
    opacity: 1;
    filter: drop-shadow(0 3px 6px rgba(0, 0, 0, 0.3));
    z-index: 15;
    animation: edgeSelect 0.3s ease-out;
}

.graph-edge.highlighted {
    --edge-color: var(--graph-highlight-color, var(--color-success));
    animation: edgeHighlight 1s ease-in-out infinite;
}

.graph-edge.dimmed {
    opacity: 0.2;
    filter: grayscale(0.7);
}

.graph-edge.hidden {
    opacity: 0;
    pointer-events: none;
}

/* Edge focus state */
.graph-edge:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
}

/* ==========================================================================
   GRAPH ELEMENT ANIMATIONS
   ========================================================================== */

/* Node animations */
@keyframes nodeSelect {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.25);
    }
    100% {
        transform: scale(1.15);
    }
}

@keyframes nodeHighlight {
    0%, 100% {
        filter: brightness(1) drop-shadow(0 0 0px transparent);
    }
    50% {
        filter: brightness(1.3) drop-shadow(0 0 8px var(--graph-highlight-color));
    }
}

@keyframes nodeError {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-3px); }
    75% { transform: translateX(3px); }
}

/* Edge animations */
@keyframes edgeSelect {
    0% {
        stroke-width: var(--edge-width);
    }
    50% {
        stroke-width: calc(var(--edge-width) + 3px);
    }
    100% {
        stroke-width: calc(var(--edge-width) + 2px);
    }
}

@keyframes edgeHighlight {
    0%, 100% {
        stroke-width: var(--edge-width);
        opacity: 0.7;
    }
    50% {
        stroke-width: calc(var(--edge-width) + 2px);
        opacity: 1;
    }
}

@keyframes edgeFlow {
    0% {
        stroke-dasharray: 0 10;
        stroke-dashoffset: 0;
    }
    100% {
        stroke-dasharray: 5 5;
        stroke-dashoffset: -10;
    }
}

@keyframes edgeError {
    0%, 100% { 
        stroke-width: var(--edge-width); 
        filter: none;
    }
    50% { 
        stroke-width: calc(var(--edge-width) + 2px);
        filter: drop-shadow(0 0 4px var(--color-danger));
    }
}

/* ==========================================================================
   ARROW MARKERS AND DECORATIONS
   ========================================================================== */

/* SVG markers for edges */
.graph-markers defs {
    position: absolute;
    width: 0;
    height: 0;
}

/* Standard arrowhead */
#arrowhead {
    fill: var(--edge-color, currentColor);
    stroke: none;
}

/* Filled circle marker */
#circle-marker {
    fill: var(--edge-color, currentColor);
    stroke: var(--color-background, white);
    stroke-width: 1;
}

/* Diamond marker */
#diamond-marker {
    fill: var(--edge-color, currentColor);
    stroke: var(--color-background, white);
    stroke-width: 1;
}

/* ==========================================================================
   SELECTION AND INTERACTION OVERLAYS
   ========================================================================== */

/* Selection box */
.selection-box {
    fill: rgba(0, 122, 255, 0.1);
    stroke: var(--color-primary);
    stroke-width: 2;
    stroke-dasharray: 5,5;
    animation: selectionBoxAnimation 1s linear infinite;
}

@keyframes selectionBoxAnimation {
    0% {
        stroke-dashoffset: 0;
    }
    100% {
        stroke-dashoffset: 10;
    }
}

/* Lasso selection */
.lasso-selection {
    fill: rgba(52, 199, 89, 0.1);
    stroke: var(--color-success);
    stroke-width: 2;
    stroke-dasharray: 3,3;
}

/* Hover indicators */
.hover-indicator {
    fill: rgba(255, 255, 255, 0.1);
    stroke: var(--color-primary);
    stroke-width: 2;
    opacity: 0;
    transition: opacity var(--transition-fast) ease-out;
}

.hover-indicator.visible {
    opacity: 1;
}

/* ==========================================================================
   GRAPH ELEMENT LABELS
   ========================================================================== */

/* Node labels */
.node-label {
    font-family: var(--font-family-primary);
    font-size: var(--node-font-size, 12px);
    font-weight: 500;
    fill: var(--color-text-primary);
    text-anchor: middle;
    dominant-baseline: central;
    pointer-events: none;
    user-select: none;
    transition: all var(--transition-fast) ease-out;
}

.node-label.outside {
    dominant-baseline: hanging;
    text-anchor: start;
    transform: translate(0, calc(var(--node-radius, 8px) + 4px));
}

.node-label.hidden {
    opacity: 0;
}

/* Edge labels */
.edge-label {
    font-family: var(--font-family-primary);
    font-size: 10px;
    font-weight: 400;
    fill: var(--color-text-secondary);
    text-anchor: middle;
    dominant-baseline: central;
    pointer-events: none;
    user-select: none;
    background: var(--color-background);
    padding: 2px 4px;
    border-radius: 3px;
    transition: all var(--transition-fast) ease-out;
}

.edge-label.hidden {
    opacity: 0;
}

/* ==========================================================================
   THEME-SPECIFIC GRAPH STYLING
   ========================================================================== */

/* Light theme optimizations */
[data-theme="light"] .graph-canvas {
    background-image: 
        radial-gradient(circle at 1px 1px, rgba(0, 0, 0, 0.05) 1px, transparent 0);
}

[data-theme="light"] .graph-node {
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

[data-theme="light"] .graph-edge {
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.05));
}

/* Dark theme optimizations */
[data-theme="dark"] .graph-canvas {
    background-image: 
        radial-gradient(circle at 1px 1px, rgba(255, 255, 255, 0.1) 1px, transparent 0);
}

[data-theme="dark"] .graph-node {
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.5));
}

[data-theme="dark"] .graph-edge {
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
}

[data-theme="dark"] .node-label {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
}

/* Neon theme special effects */
[data-theme="neon"] .graph-node {
    filter: drop-shadow(0 0 8px var(--node-color)) 
            drop-shadow(0 0 16px var(--node-color));
}

[data-theme="neon"] .graph-edge {
    filter: drop-shadow(0 0 4px var(--edge-color));
}

[data-theme="neon"] .node-label,
[data-theme="neon"] .edge-label {
    text-shadow: 0 0 8px currentColor;
}

/* Publication theme clean styling */
[data-theme="publication"] .graph-node {
    filter: none;
}

[data-theme="publication"] .graph-edge {
    filter: none;
}

[data-theme="publication"] .node-label {
    font-family: 'Times New Roman', serif;
    font-weight: 400;
}

/* Minimal theme simplified styling */
[data-theme="minimal"] .graph-node {
    filter: none;
    transition: none;
}

[data-theme="minimal"] .graph-edge {
    filter: none;
    transition: none;
}

[data-theme="minimal"] .node-label,
[data-theme="minimal"] .edge-label {
    font-weight: 300;
}

/* ==========================================================================
   PERFORMANCE OPTIMIZATIONS
   ========================================================================== */

/* GPU acceleration for graph elements */
.graph-node,
.graph-edge,
.node-label {
    will-change: transform;
    transform: translateZ(0);
}

/* Optimize for large graphs */
.graph-container.large-graph .graph-node {
    transition: transform var(--transition-fast) ease-out;
}

.graph-container.large-graph .graph-edge {
    transition: stroke-width var(--transition-fast) ease-out;
}

/* Reduce detail on zoom out */
.graph-container[data-zoom="far"] .node-label,
.graph-container[data-zoom="far"] .edge-label {
    opacity: 0;
}

.graph-container[data-zoom="far"] .graph-node.size-small {
    opacity: 0.7;
}

.graph-container[data-zoom="far"] .graph-edge.weight-weak {
    opacity: 0.3;
}

/* ==========================================================================
   ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* High contrast mode */
@media (prefers-contrast: high) {
    .graph-node {
        stroke: #000;
        stroke-width: 2px;
    }
    
    .graph-edge {
        stroke: #000;
        stroke-width: 3px;
    }
    
    .node-label,
    .edge-label {
        fill: #000;
        font-weight: 600;
    }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
    .graph-node,
    .graph-edge {
        transition: none;
        animation: none;
    }
    
    .graph-node:hover {
        transform: none;
        filter: brightness(1.2);
    }
    
    .graph-node.selected {
        transform: none;
        stroke-width: 4px;
    }
}

/* Focus indicators for keyboard navigation */
.graph-node:focus-visible,
.graph-edge:focus-visible {
    outline: 3px solid var(--color-primary);
    outline-offset: 3px;
}

/* Screen reader support */
.graph-node[aria-selected="true"],
.graph-edge[aria-selected="true"] {
    stroke: var(--color-primary);
    stroke-width: 3px;
}

/* ==========================================================================
   RESPONSIVE GRAPH STYLING
   ========================================================================== */

/* Mobile optimizations */
@media (max-width: 768px) {
    .graph-node {
        --node-radius: calc(var(--node-radius, 8px) * 1.2);
        --node-stroke-width: calc(var(--node-stroke-width, 2px) * 1.2);
    }
    
    .graph-edge {
        --edge-width: calc(var(--edge-width, 2px) * 1.2);
    }
    
    .node-label {
        font-size: calc(var(--node-font-size, 12px) * 1.1);
    }
    
    /* Simplify interactions on mobile */
    .graph-node:hover {
        transform: scale(1.05);
    }
    
    .graph-node.selected {
        transform: scale(1.1);
    }
}

/* Touch device optimizations */
@media (hover: none) and (pointer: coarse) {
    .graph-node,
    .graph-edge {
        /* Larger touch targets */
        stroke-width: calc(var(--stroke-width, 2px) + 2px);
        stroke: transparent;
    }
    
    .graph-node:active {
        transform: scale(1.15);
    }
}

/* ==========================================================================
   CUSTOM GRAPH ELEMENT TYPES
   ========================================================================== */

/* Cluster/group styling */
.graph-cluster {
    fill: rgba(0, 122, 255, 0.1);
    stroke: var(--color-primary);
    stroke-width: 2;
    stroke-dasharray: 10,5;
    rx: 8;
    ry: 8;
    opacity: 0.8;
}

/* Meta-node styling */
.graph-meta-node {
    fill: var(--color-info);
    stroke: var(--color-background);
    stroke-width: 3;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
}

/* Connector nodes */
.graph-connector {
    fill: var(--color-text-tertiary);
    stroke: none;
    opacity: 0.6;
    --node-radius: 4px;
}

/* Virtual edges for layout */
.graph-edge.virtual {
    opacity: 0.2;
    stroke-dasharray: 2,2;
    pointer-events: none;
}

/* Bundled edges */
.graph-edge-bundle {
    stroke-width: 6px;
    opacity: 0.6;
    filter: blur(1px);
}