digraph groggy_architecture {
    // Graph settings
    rankdir=TB;
    nodesep=0.5;
    ranksep=0.8;
    
    // Node styles
    node [shape=box, style=filled, fontname="Arial", fontsize=10];
    
    // Color scheme
    subgraph cluster_api {
        label="Public API Layer";
        style=filled;
        color=lightblue;
        
        Graph [fillcolor=lightgreen, label="Graph\n(Main API)\n44 functions"];
    }
    
    subgraph cluster_core {
        label="Core Architecture";
        style=filled;
        color=lightgray;
        
        Space [fillcolor=lightcyan, label="GraphSpace\n(Active State)\n39 functions\n72% complete"];
        Pool [fillcolor=lightcyan, label="GraphPool\n(Data Storage)\n46 functions\n63% complete"];
        ChangeTracker [fillcolor=lightcyan, label="ChangeTracker\n(Change Mgmt)\n69 functions\n38% complete"];
        Strategies [fillcolor=lightgreen, label="Strategies\n(Temporal Storage)\n42 functions\n88% complete"];
        History [fillcolor=lightyellow, label="HistoryForest\n(Version Control)\n94 functions\n1% complete"];
        Query [fillcolor=lightyellow, label="QueryEngine\n(Analytics)\n41 functions\n2% complete"];
        RefManager [fillcolor=lightyellow, label="RefManager\n(Branches/Tags)\n67 functions\n1% complete"];
    }
    
    subgraph cluster_support {
        label="Supporting Components";
        style=filled;
        color=lightgray;
        
        State [fillcolor=lightcyan, label="StateObject\n(State Mgmt)\n69 functions\n68% complete"];
        Delta [fillcolor=lightgreen, label="DeltaObject\n(Change Deltas)\n37 functions\n95% complete"];
        Config [fillcolor=lightyellow, label="GraphConfig\n(Configuration)\n28 functions\n11% complete"];
        Types [fillcolor=lightcoral, label="Types\n(Core Types)\n12 functions\n0% complete"];
        Errors [fillcolor=lightgreen, label="Errors\n(Error Handling)\n32 functions\n88% complete"];
    }
    
    // Dependencies (main flow)
    Graph -> Space [label="manages active state"];
    Graph -> Pool [label="coordinates data ops"];
    Graph -> History [label="version control"];
    Graph -> Query [label="analytics"];
    Graph -> Config [label="configuration"];
    
    // Core component interactions
    Space -> Pool [label="attribute storage"];
    Space -> ChangeTracker [label="tracks changes"];
    ChangeTracker -> Strategies [label="storage strategy"];
    ChangeTracker -> Delta [label="creates deltas"];
    History -> State [label="manages states"];
    History -> Delta [label="applies changes"];
    History -> RefManager [label="branch/tag mgmt"];
    
    // Supporting dependencies
    Pool -> Types [label="uses core types"];
    Space -> Types [label="uses core types"];
    ChangeTracker -> Types [label="uses core types"];
    Graph -> Errors [label="error handling"];
    Pool -> Errors [label="error handling"];
    
    // Strategy pattern
    Strategies -> Delta [label="creates deltas", style=dashed];
    
    // Legend
    subgraph cluster_legend {
        label="Implementation Status";
        style=filled;
        color=white;
        
        legend1 [shape=box, fillcolor=lightgreen, label="80%+ Complete"];
        legend2 [shape=box, fillcolor=lightcyan, label="40-80% Complete"];
        legend3 [shape=box, fillcolor=lightyellow, label="10-40% Complete"];
        legend4 [shape=box, fillcolor=lightcoral, label="<10% Complete"];
        
        legend1 -> legend2 -> legend3 -> legend4 [style=invis];
    }
}