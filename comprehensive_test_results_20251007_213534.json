{
  "test_results": {
    "Graph": {
      "object_name": "Graph",
      "object_type": "Graph",
      "total_methods": 65,
      "successful_methods": 50,
      "failed_methods": 15,
      "methods": {
        "add_edge": {
          "success": true,
          "message": "With-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "add_edges": {
          "success": false,
          "message": "With-args failed: add_edges expects a list of (source, target) tuples, (source, target, attrs) tuples, or dictionaries. Use uid_key parameter for string node IDs, node_mapping for dictionary format, or source/target parameters to specify custom field names.",
          "result_type": null,
          "has_signature_info": true
        },
        "add_graph": {
          "success": false,
          "message": "With-args failed: Graph.add_graph() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": true
        },
        "add_node": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "add_nodes": {
          "success": true,
          "message": "With-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "aggregate": {
          "success": true,
          "message": "With-args call successful: AggregationResult",
          "result_type": "AggregationResult",
          "has_signature_info": true
        },
        "all_edge_attribute_names": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "all_node_attribute_names": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "bfs": {
          "success": true,
          "message": "With-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "branches": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "checkout_branch": {
          "success": false,
          "message": "With-args failed: Branch 'test_branch' not found",
          "result_type": null,
          "has_signature_info": true
        },
        "commit": {
          "success": true,
          "message": "With-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "commit_history": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "contains_edge": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "contains_node": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "create_branch": {
          "success": true,
          "message": "With-args call successful: NoneType",
          "result_type": null,
          "has_signature_info": true
        },
        "density": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "dfs": {
          "success": true,
          "message": "With-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "edge_attribute_keys": {
          "success": true,
          "message": "With-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "edge_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "edge_endpoints": {
          "success": true,
          "message": "With-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "edge_ids": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "edges": {
          "success": true,
          "message": "Property access successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        },
        "filter_edges": {
          "success": true,
          "message": "With-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "filter_nodes": {
          "success": true,
          "message": "With-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "get_edge_attr": {
          "success": true,
          "message": "With-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "get_edge_attrs": {
          "success": false,
          "message": "With-args failed: argument 'attrs': 'dict' object cannot be converted to 'Sequence'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_node_attr": {
          "success": true,
          "message": "With-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "get_node_attrs": {
          "success": false,
          "message": "With-args failed: argument 'attrs': 'dict' object cannot be converted to 'Sequence'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_node_mapping": {
          "success": true,
          "message": "With-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "group_by": {
          "success": true,
          "message": "With-args call successful: GroupedAggregationResult",
          "result_type": "GroupedAggregationResult",
          "has_signature_info": true
        },
        "group_nodes_by_attribute": {
          "success": true,
          "message": "With-args call successful: GroupedAggregationResult",
          "result_type": "GroupedAggregationResult",
          "has_signature_info": true
        },
        "has_edge": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "has_edge_attribute": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "has_node": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "has_node_attribute": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "has_uncommitted_changes": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "historical_view": {
          "success": false,
          "message": "With-args failed: Commit 0 does not exist in history",
          "result_type": null,
          "has_signature_info": true
        },
        "is_connected": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "is_directed": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "is_undirected": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "laplacian_matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "neighborhood": {
          "success": true,
          "message": "With-args call successful: NeighborhoodResult",
          "result_type": "NeighborhoodResult",
          "has_signature_info": true
        },
        "neighborhood_statistics": {
          "success": true,
          "message": "No-args call successful: NeighborhoodStats",
          "result_type": "NeighborhoodStats",
          "has_signature_info": true
        },
        "neighbors": {
          "success": false,
          "message": "Method execution failed: nodes parameter is required",
          "result_type": null,
          "has_signature_info": true
        },
        "node_attribute_keys": {
          "success": true,
          "message": "With-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "node_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "node_ids": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "nodes": {
          "success": true,
          "message": "Property access successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": false
        },
        "remove_edge": {
          "success": true,
          "message": "With-args call successful: NoneType",
          "result_type": null,
          "has_signature_info": true
        },
        "remove_edges": {
          "success": false,
          "message": "With-args failed: Edge 0 not found during remove edge. Check if edge exists with contains_edge()",
          "result_type": null,
          "has_signature_info": true
        },
        "remove_node": {
          "success": true,
          "message": "With-args call successful: NoneType",
          "result_type": null,
          "has_signature_info": true
        },
        "remove_nodes": {
          "success": false,
          "message": "With-args failed: Node 0 not found during remove node. Check if node exists with contains_node()",
          "result_type": null,
          "has_signature_info": true
        },
        "resolve_string_id_to_node": {
          "success": false,
          "message": "With-args failed: \"No node found with name='node_0'\"",
          "result_type": null,
          "has_signature_info": true
        },
        "set_edge_attr": {
          "success": false,
          "message": "With-args failed: Edge 0 not found during set attribute. Check if edge exists with contains_edge()",
          "result_type": null,
          "has_signature_info": true
        },
        "set_edge_attrs": {
          "success": false,
          "message": "With-args failed: 'int' object cannot be converted to 'PyString'",
          "result_type": null,
          "has_signature_info": true
        },
        "set_node_attr": {
          "success": false,
          "message": "With-args failed: Node 0 not found during set attribute. Check that node 0 exists before trying to set attribute",
          "result_type": null,
          "has_signature_info": true
        },
        "set_node_attrs": {
          "success": false,
          "message": "With-args failed: 'int' object cannot be converted to 'PyString'",
          "result_type": null,
          "has_signature_info": true
        },
        "shortest_path": {
          "success": true,
          "message": "With-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "table": {
          "success": true,
          "message": "No-args call successful: GraphTable",
          "result_type": "GraphTable",
          "has_signature_info": true
        },
        "to_matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "to_networkx": {
          "success": true,
          "message": "No-args call successful: Graph",
          "result_type": "Graph",
          "has_signature_info": true
        },
        "transition_matrix": {
          "success": false,
          "message": "Method execution failed: transition_matrix needs to be implemented in core first",
          "result_type": null,
          "has_signature_info": true
        },
        "view": {
          "success": true,
          "message": "No-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        }
      },
      "success_rate": 76.92307692307693,
      "creation_status": "success"
    },
    "NodesAccessor": {
      "object_name": "NodesAccessor",
      "object_type": "NodesAccessor",
      "total_methods": 15,
      "successful_methods": 12,
      "failed_methods": 3,
      "methods": {
        "all": {
          "success": true,
          "message": "No-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "array": {
          "success": true,
          "message": "No-args call successful: NodesArray",
          "result_type": "NodesArray",
          "has_signature_info": true
        },
        "attribute_names": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "attributes": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "base": {
          "success": true,
          "message": "Property access successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": false
        },
        "filter": {
          "success": false,
          "message": "With-args failed: NodesAccessor.filter() missing 1 required positional argument: 'filter'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_meta_node": {
          "success": false,
          "message": "With-args failed: NodesAccessor.get_meta_node() missing 1 required positional argument: 'node_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": true,
          "message": "With-args call successful: SubgraphArray",
          "result_type": "SubgraphArray",
          "has_signature_info": true
        },
        "ids": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "meta": {
          "success": true,
          "message": "Property access successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": false
        },
        "set_attrs": {
          "success": false,
          "message": "With-args failed: NodesAccessor.set_attrs() missing 1 required positional argument: 'attrs_dict'",
          "result_type": null,
          "has_signature_info": true
        },
        "subgraphs": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "table": {
          "success": true,
          "message": "No-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 80.0,
      "creation_status": "success"
    },
    "EdgesAccessor": {
      "object_name": "EdgesAccessor",
      "object_type": "EdgesAccessor",
      "total_methods": 16,
      "successful_methods": 14,
      "failed_methods": 2,
      "methods": {
        "all": {
          "success": true,
          "message": "No-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "array": {
          "success": true,
          "message": "No-args call successful: EdgesArray",
          "result_type": "EdgesArray",
          "has_signature_info": true
        },
        "attribute_names": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "attributes": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "base": {
          "success": true,
          "message": "Property access successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        },
        "filter": {
          "success": false,
          "message": "With-args failed: EdgesAccessor.filter() missing 1 required positional argument: 'filter'",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": true,
          "message": "With-args call successful: SubgraphArray",
          "result_type": "SubgraphArray",
          "has_signature_info": true
        },
        "ids": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "meta": {
          "success": true,
          "message": "Property access successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        },
        "set_attrs": {
          "success": false,
          "message": "With-args failed: EdgesAccessor.set_attrs() missing 1 required positional argument: 'attrs_dict'",
          "result_type": null,
          "has_signature_info": true
        },
        "sources": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "table": {
          "success": true,
          "message": "No-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "targets": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        },
        "weight_matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        }
      },
      "success_rate": 87.5,
      "creation_status": "success"
    },
    "GraphTable": {
      "object_name": "GraphTable",
      "object_type": "GraphTable",
      "total_methods": 22,
      "successful_methods": 13,
      "failed_methods": 9,
      "methods": {
        "auto_assign_edge_ids": {
          "success": true,
          "message": "No-args call successful: GraphTable",
          "result_type": "GraphTable",
          "has_signature_info": true
        },
        "edges": {
          "success": true,
          "message": "Property access successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": false
        },
        "from_federated_bundles": {
          "success": false,
          "message": "With-args failed: GraphTable.from_federated_bundles() missing 1 required positional argument: 'bundle_paths'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_bundle_info": {
          "success": false,
          "message": "With-args failed: GraphTable.get_bundle_info() missing 1 required positional argument: 'bundle_path'",
          "result_type": null,
          "has_signature_info": true
        },
        "head": {
          "success": true,
          "message": "No-args call successful: GraphTable",
          "result_type": "GraphTable",
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "load_bundle": {
          "success": false,
          "message": "With-args failed: GraphTable.load_bundle() missing 1 required positional argument: 'bundle_path'",
          "result_type": null,
          "has_signature_info": true
        },
        "merge": {
          "success": false,
          "message": "With-args failed: GraphTable.merge() missing 1 required positional argument: 'tables'",
          "result_type": null,
          "has_signature_info": true
        },
        "ncols": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "nodes": {
          "success": true,
          "message": "Property access successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": false
        },
        "nrows": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "save_bundle": {
          "success": false,
          "message": "With-args failed: GraphTable.save_bundle() missing 1 required positional argument: 'bundle_path'",
          "result_type": null,
          "has_signature_info": true
        },
        "shape": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "stats": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "tail": {
          "success": true,
          "message": "No-args call successful: GraphTable",
          "result_type": "GraphTable",
          "has_signature_info": true
        },
        "to_edges": {
          "success": false,
          "message": "Method execution failed: GraphTable to EdgesAccessor conversion not yet implemented. Use .edges() property instead.",
          "result_type": null,
          "has_signature_info": true
        },
        "to_graph": {
          "success": true,
          "message": "No-args call successful: Graph",
          "result_type": "Graph",
          "has_signature_info": true
        },
        "to_nodes": {
          "success": false,
          "message": "Method execution failed: GraphTable to NodesAccessor conversion not yet implemented. Use .nodes() property instead.",
          "result_type": null,
          "has_signature_info": true
        },
        "to_subgraphs": {
          "success": false,
          "message": "Method execution failed: GraphTable to SubgraphArray conversion not yet implemented.",
          "result_type": null,
          "has_signature_info": true
        },
        "validate": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "verify_bundle": {
          "success": false,
          "message": "With-args failed: GraphTable.verify_bundle() missing 1 required positional argument: 'bundle_path'",
          "result_type": null,
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 59.09090909090909,
      "creation_status": "success"
    },
    "NodesTable": {
      "object_name": "NodesTable",
      "object_type": "NodesTable",
      "total_methods": 33,
      "successful_methods": 21,
      "failed_methods": 12,
      "methods": {
        "base_table": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "drop_columns": {
          "success": true,
          "message": "With-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "filter": {
          "success": false,
          "message": "With-args failed: NodesTable.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter_by_attr": {
          "success": false,
          "message": "With-args failed: NodesTable.filter_by_attr() missing 1 required positional argument: 'value'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_csv": {
          "success": false,
          "message": "With-args failed: NodesTable.from_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_dict": {
          "success": false,
          "message": "With-args failed: NodesTable.from_dict() missing 1 required positional argument: 'data'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_json": {
          "success": false,
          "message": "With-args failed: NodesTable.from_json() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_parquet": {
          "success": false,
          "message": "With-args failed: NodesTable.from_parquet() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": true,
          "message": "With-args call successful: NodesTableArray",
          "result_type": "NodesTableArray",
          "has_signature_info": true
        },
        "head": {
          "success": true,
          "message": "No-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "interactive": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "interactive_embed": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "interactive_viz": {
          "success": true,
          "message": "No-args call successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": true
        },
        "into_base_table": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: NodesTableRowIterator",
          "result_type": "NodesTableRowIterator",
          "has_signature_info": true
        },
        "ncols": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "node_ids": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "nrows": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "rich_display": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "select": {
          "success": true,
          "message": "With-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "shape": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "slice": {
          "success": false,
          "message": "With-args failed: NodesTable.slice() missing 2 required positional arguments: 'start' and 'end'",
          "result_type": null,
          "has_signature_info": true
        },
        "sort_by": {
          "success": true,
          "message": "With-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "sort_values": {
          "success": true,
          "message": "With-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "tail": {
          "success": true,
          "message": "No-args call successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": true
        },
        "to_csv": {
          "success": false,
          "message": "With-args failed: NodesTable.to_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_json": {
          "success": false,
          "message": "With-args failed: NodesTable.to_json() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_pandas": {
          "success": true,
          "message": "No-args call successful: DataFrame",
          "result_type": "DataFrame",
          "has_signature_info": true
        },
        "to_parquet": {
          "success": false,
          "message": "With-args failed: NodesTable.to_parquet() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "unique_attr_values": {
          "success": false,
          "message": "With-args failed: InvalidInput(\"Column 'test' not found\")",
          "result_type": null,
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        },
        "with_attributes": {
          "success": false,
          "message": "With-args failed: NodesTable.with_attributes() missing 1 required positional argument: 'attributes'",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 63.63636363636363,
      "creation_status": "success"
    },
    "EdgesTable": {
      "object_name": "EdgesTable",
      "object_type": "EdgesTable",
      "total_methods": 37,
      "successful_methods": 24,
      "failed_methods": 13,
      "methods": {
        "as_tuples": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "auto_assign_edge_ids": {
          "success": true,
          "message": "No-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "base_table": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "drop_columns": {
          "success": true,
          "message": "With-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "edge_ids": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "filter": {
          "success": false,
          "message": "With-args failed: EdgesTable.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter_by_attr": {
          "success": false,
          "message": "With-args failed: EdgesTable.filter_by_attr() missing 1 required positional argument: 'value'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter_by_sources": {
          "success": false,
          "message": "With-args failed: EdgesTable.filter_by_sources() missing 1 required positional argument: 'source_nodes'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter_by_targets": {
          "success": false,
          "message": "With-args failed: EdgesTable.filter_by_targets() missing 1 required positional argument: 'target_nodes'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_csv": {
          "success": false,
          "message": "With-args failed: EdgesTable.from_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_dict": {
          "success": false,
          "message": "With-args failed: EdgesTable.from_dict() missing 1 required positional argument: 'data'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_json": {
          "success": false,
          "message": "With-args failed: EdgesTable.from_json() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_parquet": {
          "success": false,
          "message": "With-args failed: EdgesTable.from_parquet() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": true,
          "message": "With-args call successful: EdgesTableArray",
          "result_type": "EdgesTableArray",
          "has_signature_info": true
        },
        "head": {
          "success": true,
          "message": "No-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "interactive": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "interactive_embed": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "interactive_viz": {
          "success": true,
          "message": "No-args call successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": true
        },
        "into_base_table": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: EdgesTableRowIterator",
          "result_type": "EdgesTableRowIterator",
          "has_signature_info": true
        },
        "ncols": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "nrows": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "rich_display": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "select": {
          "success": true,
          "message": "With-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "shape": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "slice": {
          "success": false,
          "message": "With-args failed: EdgesTable.slice() missing 2 required positional arguments: 'start' and 'end'",
          "result_type": null,
          "has_signature_info": true
        },
        "sort_by": {
          "success": true,
          "message": "With-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "sort_values": {
          "success": true,
          "message": "With-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "sources": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "tail": {
          "success": true,
          "message": "No-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "targets": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "to_csv": {
          "success": false,
          "message": "With-args failed: EdgesTable.to_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_json": {
          "success": false,
          "message": "With-args failed: EdgesTable.to_json() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_pandas": {
          "success": true,
          "message": "No-args call successful: DataFrame",
          "result_type": "DataFrame",
          "has_signature_info": true
        },
        "to_parquet": {
          "success": false,
          "message": "With-args failed: EdgesTable.to_parquet() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "unique_attr_values": {
          "success": false,
          "message": "With-args failed: InvalidInput(\"Column 'test' not found\")",
          "result_type": null,
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 64.86486486486487,
      "creation_status": "success"
    },
    "NodesArray": {
      "object_name": "NodesArray",
      "object_type": "NodesArray",
      "total_methods": 13,
      "successful_methods": 9,
      "failed_methods": 4,
      "methods": {
        "contains": {
          "success": false,
          "message": "With-args failed: NodesArray.contains() missing 1 required positional argument: 'item'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter": {
          "success": false,
          "message": "With-args failed: NodesArray.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter_by_size": {
          "success": false,
          "message": "With-args failed: NodesArray.filter_by_size() missing 1 required positional argument: 'min_size'",
          "result_type": null,
          "has_signature_info": true
        },
        "first": {
          "success": true,
          "message": "No-args call successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": true
        },
        "interactive": {
          "success": false,
          "message": "Method execution failed: NodesArray.interactive() not yet implemented - use .table().interactive_viz() instead",
          "result_type": null,
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: NodesArrayIterator",
          "result_type": "NodesArrayIterator",
          "has_signature_info": true
        },
        "last": {
          "success": true,
          "message": "No-args call successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": true
        },
        "stats": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "table": {
          "success": true,
          "message": "No-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "total_node_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "union": {
          "success": true,
          "message": "No-args call successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": true
        }
      },
      "success_rate": 69.23076923076923,
      "creation_status": "success"
    },
    "EdgesArray": {
      "object_name": "EdgesArray",
      "object_type": "EdgesArray",
      "total_methods": 15,
      "successful_methods": 12,
      "failed_methods": 3,
      "methods": {
        "contains": {
          "success": false,
          "message": "Parameter required but none worked: EdgesArray.contains() missing 1 required positional argument: 'item'",
          "result_type": null,
          "has_signature_info": false
        },
        "filter": {
          "success": false,
          "message": "Parameter required but none worked: EdgesArray.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": false
        },
        "filter_by_size": {
          "success": true,
          "message": "Single param (0) successful: EdgesArray",
          "result_type": "EdgesArray",
          "has_signature_info": false
        },
        "filter_by_weight": {
          "success": true,
          "message": "Single param (0) successful: EdgesArray",
          "result_type": "EdgesArray",
          "has_signature_info": false
        },
        "first": {
          "success": true,
          "message": "No-args call successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        },
        "interactive": {
          "success": false,
          "message": "Method execution failed: EdgesArray.interactive() not yet implemented - use .table().interactive_viz() instead",
          "result_type": null,
          "has_signature_info": false
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: EdgesArrayIterator",
          "result_type": "EdgesArrayIterator",
          "has_signature_info": false
        },
        "last": {
          "success": true,
          "message": "No-args call successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        },
        "nodes": {
          "success": true,
          "message": "No-args call successful: NodesArray",
          "result_type": "NodesArray",
          "has_signature_info": false
        },
        "stats": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "table": {
          "success": true,
          "message": "No-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": false
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "total_edge_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "union": {
          "success": true,
          "message": "No-args call successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 80.0,
      "creation_status": "success"
    },
    "NumArray": {
      "object_name": "NumArray",
      "object_type": "NumArray",
      "total_methods": 17,
      "successful_methods": 14,
      "failed_methods": 3,
      "methods": {
        "contains": {
          "success": false,
          "message": "With-args failed: NumArray.contains() missing 1 required positional argument: 'item'",
          "result_type": null,
          "has_signature_info": true
        },
        "count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "dtype": {
          "success": true,
          "message": "Property access successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "first": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "last": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "max": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "mean": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "min": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "nunique": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "reshape": {
          "success": false,
          "message": "With-args failed: NumArray.reshape() missing 2 required positional arguments: 'rows' and 'cols'",
          "result_type": null,
          "has_signature_info": true
        },
        "std": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "sum": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "to_type": {
          "success": false,
          "message": "With-args failed: NumArray.to_type() missing 1 required positional argument: 'dtype'",
          "result_type": null,
          "has_signature_info": true
        },
        "unique": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "var": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        }
      },
      "success_rate": 82.35294117647058,
      "creation_status": "success"
    },
    "SubgraphArray": {
      "object_name": "SubgraphArray",
      "object_type": "SubgraphArray",
      "total_methods": 14,
      "successful_methods": 10,
      "failed_methods": 4,
      "methods": {
        "collapse": {
          "success": false,
          "message": "Method execution failed: Failed to create meta-node: Node 0 not found while attempting to set bulk node attributes. Check that node 0 exists before trying to set bulk node attributes",
          "result_type": null,
          "has_signature_info": true
        },
        "collect": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "edges_table": {
          "success": true,
          "message": "No-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "extract_node_attribute": {
          "success": false,
          "message": "With-args failed: \"Attribute 'test' not found in subgraph 0\"",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": false,
          "message": "With-args failed: SubgraphArray.group_by() missing 1 required positional argument: 'element_type'",
          "result_type": null,
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "map": {
          "success": false,
          "message": "With-args failed: Map function must return int, float, str, or bool",
          "result_type": null,
          "has_signature_info": true
        },
        "merge": {
          "success": true,
          "message": "No-args call successful: Graph",
          "result_type": "Graph",
          "has_signature_info": true
        },
        "nodes_table": {
          "success": true,
          "message": "No-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "sample": {
          "success": true,
          "message": "With-args call successful: SubgraphArray",
          "result_type": "SubgraphArray",
          "has_signature_info": true
        },
        "summary": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "table": {
          "success": true,
          "message": "No-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 71.42857142857143,
      "creation_status": "success"
    },
    "TableArray": {
      "object_name": "TableArray",
      "object_type": "TableArray",
      "total_methods": 8,
      "successful_methods": 5,
      "failed_methods": 3,
      "methods": {
        "agg": {
          "success": false,
          "message": "With-args failed: TableArray.agg() missing 1 required positional argument: 'agg_spec'",
          "result_type": null,
          "has_signature_info": true
        },
        "collect": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "extract_column": {
          "success": false,
          "message": "With-args failed: \"Column 'name' not found in table 0\"",
          "result_type": null,
          "has_signature_info": true
        },
        "filter": {
          "success": true,
          "message": "With-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: TableArrayIterator",
          "result_type": "TableArrayIterator",
          "has_signature_info": true
        },
        "map": {
          "success": false,
          "message": "With-args failed: Map function must return int, float, str, or bool",
          "result_type": null,
          "has_signature_info": true
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        }
      },
      "success_rate": 62.5,
      "creation_status": "success"
    },
    "Subgraph": {
      "object_name": "Subgraph",
      "object_type": "Subgraph",
      "total_methods": 60,
      "successful_methods": 32,
      "failed_methods": 28,
      "methods": {
        "adj": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "adjacency_list": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "adjacency_matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "bfs": {
          "success": false,
          "message": "With-args failed: Subgraph.bfs() missing 1 required positional argument: 'start'",
          "result_type": null,
          "has_signature_info": true
        },
        "calculate_similarity": {
          "success": false,
          "message": "With-args failed: Subgraph.calculate_similarity() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": true
        },
        "child_meta_nodes": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "clustering_coefficient": {
          "success": false,
          "message": "Method execution failed: Clustering coefficient not yet implemented in core - coming in future version",
          "result_type": null,
          "has_signature_info": true
        },
        "collapse": {
          "success": false,
          "message": "Method execution failed: Failed to create meta-node: Node 0 not found while attempting to set bulk node attributes. Check that node 0 exists before trying to set bulk node attributes",
          "result_type": null,
          "has_signature_info": true
        },
        "connected_components": {
          "success": true,
          "message": "No-args call successful: ComponentsArray",
          "result_type": "ComponentsArray",
          "has_signature_info": true
        },
        "contains_edge": {
          "success": false,
          "message": "With-args failed: Subgraph.contains_edge() missing 1 required positional argument: 'edge_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "contains_node": {
          "success": false,
          "message": "With-args failed: Subgraph.contains_node() missing 1 required positional argument: 'node_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "degree": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "density": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "dfs": {
          "success": false,
          "message": "With-args failed: Subgraph.dfs() missing 1 required positional argument: 'start'",
          "result_type": null,
          "has_signature_info": true
        },
        "edge_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "edge_endpoints": {
          "success": false,
          "message": "With-args failed: Subgraph.edge_endpoints() missing 1 required positional argument: 'edge_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "edge_ids": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "edges": {
          "success": true,
          "message": "Property access successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": false
        },
        "edges_table": {
          "success": true,
          "message": "No-args call successful: EdgesTable",
          "result_type": "EdgesTable",
          "has_signature_info": true
        },
        "entity_type": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "filter_edges": {
          "success": false,
          "message": "With-args failed: Subgraph.filter_edges() missing 1 required positional argument: 'filter'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter_nodes": {
          "success": false,
          "message": "With-args failed: Subgraph.filter_nodes() missing 1 required positional argument: 'filter'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_edge_attribute": {
          "success": false,
          "message": "With-args failed: Subgraph.get_edge_attribute() missing 1 required positional argument: 'attr_name'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_node_attribute": {
          "success": false,
          "message": "With-args failed: Subgraph.get_node_attribute() missing 1 required positional argument: 'attr_name'",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": false,
          "message": "With-args failed: Subgraph.group_by() missing 1 required positional argument: 'element_type'",
          "result_type": null,
          "has_signature_info": true
        },
        "has_edge": {
          "success": false,
          "message": "With-args failed: Subgraph.has_edge() missing 1 required positional argument: 'edge_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "has_edge_between": {
          "success": false,
          "message": "With-args failed: Subgraph.has_edge_between() missing 2 required positional arguments: 'source' and 'target'",
          "result_type": null,
          "has_signature_info": true
        },
        "has_meta_nodes": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "has_node": {
          "success": false,
          "message": "With-args failed: Subgraph.has_node() missing 1 required positional argument: 'node_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "has_path": {
          "success": false,
          "message": "With-args failed: Subgraph.has_path() missing 2 required positional arguments: 'node1_id' and 'node2_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "hierarchy_level": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "in_degree": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "induced_subgraph": {
          "success": false,
          "message": "With-args failed: Subgraph.induced_subgraph() missing 1 required positional argument: 'nodes'",
          "result_type": null,
          "has_signature_info": true
        },
        "intersect_with": {
          "success": false,
          "message": "With-args failed: Subgraph.intersect_with() missing 1 required positional argument: '_other'",
          "result_type": null,
          "has_signature_info": true
        },
        "is_connected": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "merge_with": {
          "success": false,
          "message": "With-args failed: Subgraph.merge_with() missing 1 required positional argument: '_other'",
          "result_type": null,
          "has_signature_info": true
        },
        "meta_nodes": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "neighborhood": {
          "success": true,
          "message": "No-args call successful: SubgraphArray",
          "result_type": "SubgraphArray",
          "has_signature_info": true
        },
        "neighbors": {
          "success": false,
          "message": "With-args failed: Subgraph.neighbors() missing 1 required positional argument: 'node_id'",
          "result_type": null,
          "has_signature_info": true
        },
        "node_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "node_ids": {
          "success": true,
          "message": "Property access successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "nodes": {
          "success": true,
          "message": "Property access successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": false
        },
        "out_degree": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "parent_meta_node": {
          "success": true,
          "message": "No-args call successful: NoneType",
          "result_type": null,
          "has_signature_info": true
        },
        "sample": {
          "success": true,
          "message": "With-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "set_edge_attrs": {
          "success": false,
          "message": "With-args failed: Subgraph.set_edge_attrs() missing 1 required positional argument: 'attrs_dict'",
          "result_type": null,
          "has_signature_info": true
        },
        "set_node_attrs": {
          "success": false,
          "message": "With-args failed: Subgraph.set_node_attrs() missing 1 required positional argument: 'attrs_dict'",
          "result_type": null,
          "has_signature_info": true
        },
        "shortest_path_subgraph": {
          "success": false,
          "message": "With-args failed: Subgraph.shortest_path_subgraph() missing 2 required positional arguments: 'source' and 'target'",
          "result_type": null,
          "has_signature_info": true
        },
        "subgraph_from_edges": {
          "success": false,
          "message": "With-args failed: Subgraph.subgraph_from_edges() missing 1 required positional argument: 'edges'",
          "result_type": null,
          "has_signature_info": true
        },
        "subtract_from": {
          "success": false,
          "message": "With-args failed: Subgraph.subtract_from() missing 1 required positional argument: '_other'",
          "result_type": null,
          "has_signature_info": true
        },
        "summary": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "table": {
          "success": true,
          "message": "No-args call successful: GraphTable",
          "result_type": "GraphTable",
          "has_signature_info": true
        },
        "to_edges": {
          "success": true,
          "message": "No-args call successful: EdgesAccessor",
          "result_type": "EdgesAccessor",
          "has_signature_info": true
        },
        "to_graph": {
          "success": true,
          "message": "No-args call successful: Graph",
          "result_type": "Graph",
          "has_signature_info": true
        },
        "to_matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "to_networkx": {
          "success": false,
          "message": "Method execution failed: Failed to convert subgraph to NetworkX: Node 0 not found while attempting to get attributes. Check if node exists with contains_node()",
          "result_type": null,
          "has_signature_info": true
        },
        "to_nodes": {
          "success": true,
          "message": "No-args call successful: NodesAccessor",
          "result_type": "NodesAccessor",
          "has_signature_info": true
        },
        "transitivity": {
          "success": false,
          "message": "Method execution failed: Transitivity not yet implemented in core - coming in future version",
          "result_type": null,
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 53.333333333333336,
      "creation_status": "success"
    },
    "ComponentsArray": {
      "object_name": "ComponentsArray",
      "object_type": "ComponentsArray",
      "total_methods": 9,
      "successful_methods": 7,
      "failed_methods": 2,
      "methods": {
        "collapse": {
          "success": false,
          "message": "Method execution failed: Failed to create meta-node: Node 0 not found while attempting to set bulk node attributes. Check that node 0 exists before trying to set bulk node attributes",
          "result_type": null,
          "has_signature_info": true
        },
        "filter": {
          "success": false,
          "message": "With-args failed: ComponentsArray.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": true
        },
        "largest_component": {
          "success": true,
          "message": "No-args call successful: Subgraph",
          "result_type": "Subgraph",
          "has_signature_info": true
        },
        "neighborhood": {
          "success": true,
          "message": "No-args call successful: SubgraphArray",
          "result_type": "SubgraphArray",
          "has_signature_info": true
        },
        "sample": {
          "success": true,
          "message": "With-args call successful: SubgraphArray",
          "result_type": "SubgraphArray",
          "has_signature_info": true
        },
        "sizes": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "table": {
          "success": true,
          "message": "No-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "viz": {
          "success": true,
          "message": "Property access successful: VizAccessor",
          "result_type": "VizAccessor",
          "has_signature_info": false
        }
      },
      "success_rate": 77.77777777777779,
      "creation_status": "success"
    },
    "GraphMatrix": {
      "object_name": "GraphMatrix",
      "object_type": "GraphMatrix",
      "total_methods": 93,
      "successful_methods": 50,
      "failed_methods": 43,
      "methods": {
        "abs": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "apply": {
          "success": true,
          "message": "With-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "backward": {
          "success": false,
          "message": "Method execution failed: Backward pass failed: InvalidInput(\"No computation graph available for gradient computation\")",
          "result_type": null,
          "has_signature_info": true
        },
        "cholesky_decomposition": {
          "success": false,
          "message": "Method execution failed: Cholesky decomposition failed: InvalidInput(\"Cholesky decomposition requires square matrix\")",
          "result_type": null,
          "has_signature_info": true
        },
        "columns": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "concatenate": {
          "success": false,
          "message": "With-args failed: GraphMatrix.concatenate() missing 2 required positional arguments: 'other' and 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "data": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "dense": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "dense_html_repr": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "determinant": {
          "success": false,
          "message": "Method execution failed: Determinant calculation failed: InvalidInput(\"Determinant requires square matrix, got 10x3\")",
          "result_type": null,
          "has_signature_info": true
        },
        "dropout": {
          "success": false,
          "message": "With-args failed: GraphMatrix.dropout() missing 1 required positional argument: 'p'",
          "result_type": null,
          "has_signature_info": true
        },
        "dtype": {
          "success": true,
          "message": "Property access successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "eigenvalue_decomposition": {
          "success": false,
          "message": "Method execution failed: Eigenvalue decomposition failed: InvalidInput(\"Eigendecomposition requires square matrix\")",
          "result_type": null,
          "has_signature_info": true
        },
        "elementwise_multiply": {
          "success": false,
          "message": "With-args failed: GraphMatrix.elementwise_multiply() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": true
        },
        "elu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "exp": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "filter": {
          "success": false,
          "message": "With-args failed: GraphMatrix.filter() missing 1 required positional argument: 'condition'",
          "result_type": null,
          "has_signature_info": true
        },
        "flatten": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": true
        },
        "from_base_array": {
          "success": false,
          "message": "With-args failed: GraphMatrix.from_base_array() missing 3 required positional arguments: 'base_array', 'rows', and 'cols'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_data": {
          "success": false,
          "message": "With-args failed: GraphMatrix.from_data() missing 1 required positional argument: 'data'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_flattened": {
          "success": false,
          "message": "With-args failed: GraphMatrix.from_flattened() missing 3 required positional arguments: 'num_array', 'rows', and 'cols'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_graph_attributes": {
          "success": false,
          "message": "With-args failed: GraphMatrix.from_graph_attributes() missing 3 required positional arguments: '_graph', '_attrs', and '_entities'",
          "result_type": null,
          "has_signature_info": true
        },
        "gelu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "get": {
          "success": false,
          "message": "With-args failed: GraphMatrix.get() missing 1 required positional argument: 'col'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_cell": {
          "success": false,
          "message": "With-args failed: GraphMatrix.get_cell() missing 1 required positional argument: 'col'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_column": {
          "success": false,
          "message": "With-args failed: argument 'col': 'str' object cannot be interpreted as an integer",
          "result_type": null,
          "has_signature_info": true
        },
        "get_column_by_name": {
          "success": false,
          "message": "With-args failed: \"Column 'test' not found\"",
          "result_type": null,
          "has_signature_info": true
        },
        "get_row": {
          "success": false,
          "message": "With-args failed: GraphMatrix.get_row() missing 1 required positional argument: 'row'",
          "result_type": null,
          "has_signature_info": true
        },
        "grad": {
          "success": true,
          "message": "Property access successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "identity": {
          "success": true,
          "message": "With-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "inverse": {
          "success": false,
          "message": "Method execution failed: Matrix inverse calculation failed: InvalidInput(\"Matrix inverse requires square matrix, got 10x3\")",
          "result_type": null,
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "is_numeric": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_sparse": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_square": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_symmetric": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "iter_columns": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "iter_rows": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "leaky_relu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "log": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "lu_decomposition": {
          "success": false,
          "message": "Method execution failed: LU decomposition failed: InvalidInput(\"LU decomposition requires square matrix\")",
          "result_type": null,
          "has_signature_info": true
        },
        "map": {
          "success": true,
          "message": "With-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "max": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "max_axis": {
          "success": false,
          "message": "With-args failed: GraphMatrix.max_axis() missing 1 required positional argument: 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "mean": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "mean_axis": {
          "success": false,
          "message": "With-args failed: GraphMatrix.mean_axis() missing 1 required positional argument: 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "min": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "min_axis": {
          "success": false,
          "message": "With-args failed: GraphMatrix.min_axis() missing 1 required positional argument: 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "multiply": {
          "success": false,
          "message": "With-args failed: GraphMatrix.multiply() missing 1 required positional argument: 'operand'",
          "result_type": null,
          "has_signature_info": true
        },
        "norm": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "norm_inf": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "norm_l1": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "ones": {
          "success": false,
          "message": "With-args failed: GraphMatrix.ones() missing 2 required positional arguments: 'rows' and 'cols'",
          "result_type": null,
          "has_signature_info": true
        },
        "power": {
          "success": false,
          "message": "With-args failed: Matrix power failed: InvalidInput(\"Matrix must be square for power operation\")",
          "result_type": null,
          "has_signature_info": true
        },
        "preview": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "qr_decomposition": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "rank": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "relu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "repeat": {
          "success": false,
          "message": "With-args failed: GraphMatrix.repeat() missing 2 required positional arguments: 'repeats' and 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "requires_grad": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "requires_grad_": {
          "success": false,
          "message": "With-args failed: GraphMatrix.requires_grad_() missing 1 required positional argument: 'requires_grad'",
          "result_type": null,
          "has_signature_info": true
        },
        "reshape": {
          "success": false,
          "message": "With-args failed: GraphMatrix.reshape() missing 2 required positional arguments: 'new_rows' and 'new_cols'",
          "result_type": null,
          "has_signature_info": true
        },
        "rich_display": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "scalar_multiply": {
          "success": false,
          "message": "With-args failed: GraphMatrix.scalar_multiply() missing 1 required positional argument: 'scalar'",
          "result_type": null,
          "has_signature_info": true
        },
        "set": {
          "success": false,
          "message": "With-args failed: GraphMatrix.set() missing 2 required positional arguments: 'col' and 'value'",
          "result_type": null,
          "has_signature_info": true
        },
        "shape": {
          "success": true,
          "message": "Property access successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "sigmoid": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "softmax": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "solve": {
          "success": false,
          "message": "With-args failed: GraphMatrix.solve() missing 1 required positional argument: 'b'",
          "result_type": null,
          "has_signature_info": true
        },
        "split": {
          "success": false,
          "message": "With-args failed: GraphMatrix.split() missing 2 required positional arguments: 'split_points' and 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "sqrt": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "stack": {
          "success": false,
          "message": "With-args failed: GraphMatrix.stack() missing 2 required positional arguments: 'other' and 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "std_axis": {
          "success": false,
          "message": "With-args failed: GraphMatrix.std_axis() missing 1 required positional argument: 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "sum": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": true
        },
        "sum_axis": {
          "success": false,
          "message": "With-args failed: GraphMatrix.sum_axis() missing 1 required positional argument: 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "summary": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "svd": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "tanh": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "tile": {
          "success": false,
          "message": "With-args failed: GraphMatrix.tile() missing 1 required positional argument: 'reps'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_base_array": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "to_degree_matrix": {
          "success": false,
          "message": "Method execution failed: Degree matrix calculation failed: InvalidInput(\"Degree matrix requires square adjacency matrix, got 10x3\")",
          "result_type": null,
          "has_signature_info": true
        },
        "to_dict": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "to_laplacian": {
          "success": false,
          "message": "Method execution failed: Laplacian calculation failed: InvalidInput(\"Laplacian matrix requires square adjacency matrix, got 10x3\")",
          "result_type": null,
          "has_signature_info": true
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "to_normalized_laplacian": {
          "success": false,
          "message": "Method execution failed: Normalized Laplacian calculation failed: InvalidInput(\"Normalized Laplacian requires square matrix, got 10x3\")",
          "result_type": null,
          "has_signature_info": true
        },
        "to_numpy": {
          "success": true,
          "message": "No-args call successful: ndarray",
          "result_type": "ndarray",
          "has_signature_info": true
        },
        "to_pandas": {
          "success": true,
          "message": "No-args call successful: DataFrame",
          "result_type": "DataFrame",
          "has_signature_info": true
        },
        "to_table_for_streaming": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "trace": {
          "success": false,
          "message": "Method execution failed: Trace calculation failed: InvalidInput(\"Trace is only defined for square matrices, got 10x3\")",
          "result_type": null,
          "has_signature_info": true
        },
        "transpose": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": true
        },
        "var_axis": {
          "success": false,
          "message": "With-args failed: GraphMatrix.var_axis() missing 1 required positional argument: 'axis'",
          "result_type": null,
          "has_signature_info": true
        },
        "zero_grad": {
          "success": false,
          "message": "Method execution failed: Gradient clearing failed: InvalidInput(\"No computation graph available for gradient clearing\")",
          "result_type": null,
          "has_signature_info": true
        },
        "zeros": {
          "success": false,
          "message": "With-args failed: GraphMatrix.zeros() missing 2 required positional arguments: 'rows' and 'cols'",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 53.76344086021505,
      "creation_status": "success"
    },
    "BaseArray_from_builder": {
      "object_name": "BaseArray_from_builder",
      "object_type": "BaseArray",
      "total_methods": 64,
      "successful_methods": 46,
      "failed_methods": 18,
      "methods": {
        "append": {
          "success": true,
          "message": "Single param (None) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "append_element": {
          "success": true,
          "message": "Single param (None) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "apply": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.apply() missing 1 required positional argument: 'func'",
          "result_type": null,
          "has_signature_info": false
        },
        "apply_to_each": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.apply_to_each() missing 2 required positional arguments: 'method_name' and 'args'",
          "result_type": null,
          "has_signature_info": false
        },
        "contains": {
          "success": true,
          "message": "Single param (None) successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "corr": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.corr() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": false
        },
        "count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "cov": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.cov() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": false
        },
        "cummax": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "cummin": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "cumsum": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "describe": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "drop_duplicates_elements": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "drop_elements": {
          "success": true,
          "message": "Single param ([]) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "dropna": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "dtype": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "expanding": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.expanding() missing 1 required positional argument: 'operation'",
          "result_type": null,
          "has_signature_info": false
        },
        "extend": {
          "success": true,
          "message": "Single param ([]) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "extend_elements": {
          "success": true,
          "message": "Single param ([]) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "fillna": {
          "success": true,
          "message": "Single param (None) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "filter": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": false
        },
        "get": {
          "success": true,
          "message": "Single param (0) successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "get_percentile": {
          "success": true,
          "message": "Single param (0) successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "has_nulls": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "head": {
          "success": true,
          "message": "Single param (0) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "infer_numeric_type": {
          "success": true,
          "message": "No-args call successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "insert": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.insert() missing 2 required positional arguments: 'index' and 'element'",
          "result_type": null,
          "has_signature_info": false
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_numeric": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "isna": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: BaseArrayIterator",
          "result_type": "BaseArrayIterator",
          "has_signature_info": false
        },
        "len": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "map": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.map() missing 1 required positional argument: 'func'",
          "result_type": null,
          "has_signature_info": false
        },
        "max": {
          "success": false,
          "message": "Method execution failed: Max calculation failed: InvalidInput(\"Cannot compute max of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        },
        "mean": {
          "success": false,
          "message": "Method execution failed: Mean calculation failed: InvalidInput(\"Cannot compute mean of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        },
        "median": {
          "success": false,
          "message": "Method execution failed: Median calculation failed: InvalidInput(\"Cannot compute median of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        },
        "min": {
          "success": false,
          "message": "Method execution failed: Min calculation failed: InvalidInput(\"Cannot compute min of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        },
        "notna": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "null_count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "numeric_compatibility_info": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "nunique": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "pct_change": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "percentile": {
          "success": true,
          "message": "Single param (0) successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "percentiles": {
          "success": true,
          "message": "Single param ([]) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "quantile": {
          "success": true,
          "message": "Single param (0) successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "quantiles": {
          "success": true,
          "message": "Single param ([]) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "remove": {
          "success": true,
          "message": "Single param (0) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "reverse": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "rolling": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.rolling() missing 2 required positional arguments: 'window' and 'operation'",
          "result_type": null,
          "has_signature_info": false
        },
        "shift": {
          "success": true,
          "message": "Single param (0) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "sort": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "std": {
          "success": false,
          "message": "Method execution failed: Standard deviation calculation failed: InvalidInput(\"Cannot compute mean of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        },
        "sum": {
          "success": false,
          "message": "Method execution failed: Sum calculation failed: InvalidInput(\"Cannot compute sum of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        },
        "tail": {
          "success": true,
          "message": "Single param (0) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "to_num_array": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray contains non-numeric data and cannot be converted to numeric array",
          "result_type": null,
          "has_signature_info": false
        },
        "to_table": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "to_table_with_name": {
          "success": true,
          "message": "Single param () successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "to_table_with_prefix": {
          "success": true,
          "message": "Single param () successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "to_table_with_suffix": {
          "success": true,
          "message": "Single param () successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "to_type": {
          "success": false,
          "message": "Parameter required but none worked: BaseArray.to_type() missing 1 required positional argument: 'dtype'",
          "result_type": null,
          "has_signature_info": false
        },
        "unique": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "value_counts": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "var": {
          "success": false,
          "message": "Method execution failed: Variance calculation failed: InvalidInput(\"Cannot compute mean of non-numeric data type: Text(\\\"hello\\\")\")",
          "result_type": null,
          "has_signature_info": false
        }
      },
      "success_rate": 71.875,
      "creation_status": "success"
    },
    "NumArray_from_builder": {
      "object_name": "NumArray_from_builder",
      "object_type": "NumArray",
      "total_methods": 17,
      "successful_methods": 15,
      "failed_methods": 2,
      "methods": {
        "contains": {
          "success": true,
          "message": "Single param (0) successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "count": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "dtype": {
          "success": true,
          "message": "Property access successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "first": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "last": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "max": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "mean": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "min": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "nunique": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "reshape": {
          "success": false,
          "message": "Parameter required but none worked: NumArray.reshape() missing 2 required positional arguments: 'rows' and 'cols'",
          "result_type": null,
          "has_signature_info": false
        },
        "std": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "sum": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "to_type": {
          "success": false,
          "message": "Parameter required but none worked: NumArray.to_type() missing 1 required positional argument: 'dtype'",
          "result_type": null,
          "has_signature_info": false
        },
        "unique": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "var": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        }
      },
      "success_rate": 88.23529411764706,
      "creation_status": "success"
    },
    "BaseTable_from_builder": {
      "object_name": "BaseTable_from_builder",
      "object_type": "BaseTable",
      "total_methods": 101,
      "successful_methods": 69,
      "failed_methods": 32,
      "methods": {
        "add_prefix": {
          "success": true,
          "message": "Single param () successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "add_suffix": {
          "success": true,
          "message": "Single param () successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "agg": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "aggregate": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "append": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "append_row": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.append_row() missing 1 required positional argument: 'row'",
          "result_type": null,
          "has_signature_info": false
        },
        "apply": {
          "success": true,
          "message": "Single param (None) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "apply_to_columns": {
          "success": true,
          "message": "Single param (None) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "apply_to_rows": {
          "success": true,
          "message": "Single param (None) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "assign": {
          "success": true,
          "message": "Single param ({}) successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "check_outliers": {
          "success": true,
          "message": "Single param (age) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "column": {
          "success": true,
          "message": "Single param (name) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "column_info": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "column_names": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "columns": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "corr": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "corr_columns": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.corr_columns() missing 2 required positional arguments: 'col1' and 'col2'",
          "result_type": null,
          "has_signature_info": false
        },
        "cov": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "cov_columns": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.cov_columns() missing 2 required positional arguments: 'col1' and 'col2'",
          "result_type": null,
          "has_signature_info": false
        },
        "cummax": {
          "success": true,
          "message": "Single param (name) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "cummin": {
          "success": true,
          "message": "Single param (name) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "cumsum": {
          "success": true,
          "message": "Single param (name) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "describe": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "drop_columns": {
          "success": true,
          "message": "Single param ([]) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "drop_duplicates": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "drop_rows": {
          "success": true,
          "message": "Single param ([]) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "dropna": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "dropna_subset": {
          "success": true,
          "message": "Single param ([]) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "expanding": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.expanding() missing 2 required positional arguments: 'column' and 'operation'",
          "result_type": null,
          "has_signature_info": false
        },
        "expanding_all": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.expanding_all() missing 1 required positional argument: 'operation'",
          "result_type": null,
          "has_signature_info": false
        },
        "extend": {
          "success": true,
          "message": "Single param ([]) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "extend_rows": {
          "success": true,
          "message": "Single param ([]) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "fillna": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "fillna_all": {
          "success": true,
          "message": "Single param (None) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "filter": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": false
        },
        "from_csv": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.from_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": false
        },
        "from_dict": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "from_json": {
          "success": true,
          "message": "Single param (test) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "from_parquet": {
          "success": true,
          "message": "Single param (test) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "get_column_numeric": {
          "success": true,
          "message": "Single param (age) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "get_column_raw": {
          "success": true,
          "message": "Single param (name) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "get_percentile": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.get_percentile() missing 2 required positional arguments: 'column' and 'percentile'",
          "result_type": null,
          "has_signature_info": false
        },
        "group_by": {
          "success": true,
          "message": "Single param ([]) successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": false
        },
        "group_by_agg": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.group_by_agg() missing 2 required positional arguments: 'group_cols' and 'agg_specs'",
          "result_type": null,
          "has_signature_info": false
        },
        "groupby": {
          "success": true,
          "message": "Single param ([]) successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": false
        },
        "groupby_single": {
          "success": true,
          "message": "Single param (name) successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": false
        },
        "has_column": {
          "success": true,
          "message": "Single param () successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "has_nulls": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "head": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "intersect": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.intersect() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": false
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "isin": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.isin() missing 2 required positional arguments: 'column_name' and 'values'",
          "result_type": null,
          "has_signature_info": false
        },
        "isna": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: BaseTableRowIterator",
          "result_type": "BaseTableRowIterator",
          "has_signature_info": false
        },
        "join": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.join() missing 2 required positional arguments: 'other' and 'on'",
          "result_type": null,
          "has_signature_info": false
        },
        "median": {
          "success": true,
          "message": "Single param (age) successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "melt": {
          "success": true,
          "message": "Single param (name) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "ncols": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "nlargest": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.nlargest() missing 2 required positional arguments: 'n' and 'column_name'",
          "result_type": null,
          "has_signature_info": false
        },
        "notna": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "nrows": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "nsmallest": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.nsmallest() missing 2 required positional arguments: 'n' and 'column_name'",
          "result_type": null,
          "has_signature_info": false
        },
        "null_counts": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "parse_join_on": {
          "success": true,
          "message": "Single param () successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "pct_change": {
          "success": true,
          "message": "Single param (name) successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "percentile": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.percentile() missing 2 required positional arguments: 'column' and 'percentile'",
          "result_type": null,
          "has_signature_info": false
        },
        "percentiles": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.percentiles() missing 2 required positional arguments: 'column' and 'percentiles'",
          "result_type": null,
          "has_signature_info": false
        },
        "pivot_table": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.pivot_table() missing 4 required positional arguments: 'index', 'columns', 'values', and 'aggfunc'",
          "result_type": null,
          "has_signature_info": false
        },
        "profile": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "quantile": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.quantile() missing 2 required positional arguments: 'column' and 'q'",
          "result_type": null,
          "has_signature_info": false
        },
        "quantiles": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.quantiles() missing 2 required positional arguments: 'column' and 'quantiles'",
          "result_type": null,
          "has_signature_info": false
        },
        "query": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.query() missing 1 required positional argument: 'expr'",
          "result_type": null,
          "has_signature_info": false
        },
        "rename": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "reorder_columns": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.reorder_columns() missing 1 required positional argument: 'new_order'",
          "result_type": null,
          "has_signature_info": false
        },
        "rich_display": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "rolling": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.rolling() missing 3 required positional arguments: 'column', 'window', and 'operation'",
          "result_type": null,
          "has_signature_info": false
        },
        "rolling_all": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.rolling_all() missing 2 required positional arguments: 'window' and 'operation'",
          "result_type": null,
          "has_signature_info": false
        },
        "sample": {
          "success": false,
          "message": "Method execution failed: Sampling failed: InvalidInput(\"Must specify either n or fraction\")",
          "result_type": null,
          "has_signature_info": false
        },
        "select": {
          "success": true,
          "message": "Single param ([]) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "set_column": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.set_column() missing 2 required positional arguments: 'column_name' and 'values'",
          "result_type": null,
          "has_signature_info": false
        },
        "set_value": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.set_value() missing 3 required positional arguments: 'row', 'column_name', and 'value'",
          "result_type": null,
          "has_signature_info": false
        },
        "set_values_by_mask": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.set_values_by_mask() missing 3 required positional arguments: 'mask', 'column_name', and 'value'",
          "result_type": null,
          "has_signature_info": false
        },
        "set_values_by_range": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.set_values_by_range() missing 4 required positional arguments: 'start', 'end', 'column_name', and 'value'",
          "result_type": null,
          "has_signature_info": false
        },
        "shape": {
          "success": true,
          "message": "Property access successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "shift": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.shift() missing 2 required positional arguments: 'column' and 'periods'",
          "result_type": null,
          "has_signature_info": false
        },
        "slice": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.slice() missing 2 required positional arguments: 'start' and 'end'",
          "result_type": null,
          "has_signature_info": false
        },
        "sort_by": {
          "success": true,
          "message": "Single param (name) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "sort_values": {
          "success": true,
          "message": "Single param (name) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "std": {
          "success": true,
          "message": "Single param (age) successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "tail": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "to_csv": {
          "success": true,
          "message": "Single param (test) successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "to_edges_table": {
          "success": false,
          "message": "Parameter required but none worked: 'list' object is not callable",
          "result_type": null,
          "has_signature_info": false
        },
        "to_json": {
          "success": true,
          "message": "Single param (test) successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "to_nodes_table": {
          "success": true,
          "message": "Single param (name) successful: NodesTable",
          "result_type": "NodesTable",
          "has_signature_info": false
        },
        "to_pandas": {
          "success": true,
          "message": "No-args call successful: DataFrame",
          "result_type": "DataFrame",
          "has_signature_info": false
        },
        "to_parquet": {
          "success": true,
          "message": "Single param (test) successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "to_type": {
          "success": true,
          "message": "Single param () successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "union": {
          "success": false,
          "message": "Parameter required but none worked: BaseTable.union() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": false
        },
        "validate_schema": {
          "success": true,
          "message": "Single param ({}) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "value_counts": {
          "success": true,
          "message": "Single param (name) successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "var": {
          "success": true,
          "message": "Single param (age) successful: float",
          "result_type": "float",
          "has_signature_info": false
        }
      },
      "success_rate": 68.31683168316832,
      "creation_status": "success"
    },
    "GraphMatrix_from_builder": {
      "object_name": "GraphMatrix_from_builder",
      "object_type": "GraphMatrix",
      "total_methods": 93,
      "successful_methods": 69,
      "failed_methods": 24,
      "methods": {
        "abs": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "apply": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.apply() missing 1 required positional argument: 'func'",
          "result_type": null,
          "has_signature_info": false
        },
        "backward": {
          "success": false,
          "message": "Method execution failed: Backward pass failed: InvalidInput(\"No computation graph available for gradient computation\")",
          "result_type": null,
          "has_signature_info": false
        },
        "cholesky_decomposition": {
          "success": false,
          "message": "Method execution failed: Cholesky decomposition failed: InvalidInput(\"Matrix must be symmetric for Cholesky decomposition\")",
          "result_type": null,
          "has_signature_info": false
        },
        "columns": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "concatenate": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.concatenate() missing 2 required positional arguments: 'other' and 'axis'",
          "result_type": null,
          "has_signature_info": false
        },
        "data": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "dense": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "dense_html_repr": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "determinant": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "dropout": {
          "success": true,
          "message": "Single param (0) successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "dtype": {
          "success": true,
          "message": "Property access successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "eigenvalue_decomposition": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "elementwise_multiply": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.elementwise_multiply() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": false
        },
        "elu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "exp": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "filter": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.filter() missing 1 required positional argument: 'condition'",
          "result_type": null,
          "has_signature_info": false
        },
        "flatten": {
          "success": true,
          "message": "No-args call successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "from_base_array": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.from_base_array() missing 3 required positional arguments: 'base_array', 'rows', and 'cols'",
          "result_type": null,
          "has_signature_info": false
        },
        "from_data": {
          "success": true,
          "message": "Single param ([]) successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "from_flattened": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.from_flattened() missing 3 required positional arguments: 'num_array', 'rows', and 'cols'",
          "result_type": null,
          "has_signature_info": false
        },
        "from_graph_attributes": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.from_graph_attributes() missing 3 required positional arguments: '_graph', '_attrs', and '_entities'",
          "result_type": null,
          "has_signature_info": false
        },
        "gelu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "get": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.get() missing 2 required positional arguments: 'row' and 'col'",
          "result_type": null,
          "has_signature_info": false
        },
        "get_cell": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.get_cell() missing 2 required positional arguments: 'row' and 'col'",
          "result_type": null,
          "has_signature_info": false
        },
        "get_column": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "get_column_by_name": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.get_column_by_name() missing 1 required positional argument: 'name'",
          "result_type": null,
          "has_signature_info": false
        },
        "get_row": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "grad": {
          "success": true,
          "message": "Property access successful: NoneType",
          "result_type": null,
          "has_signature_info": false
        },
        "identity": {
          "success": true,
          "message": "Single param (0) successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "inverse": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_numeric": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_sparse": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_square": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "is_symmetric": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "iter_columns": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "iter_rows": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "leaky_relu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "log": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "lu_decomposition": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "map": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.map() missing 1 required positional argument: 'func'",
          "result_type": null,
          "has_signature_info": false
        },
        "max": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "max_axis": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "mean": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "mean_axis": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "min": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "min_axis": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "multiply": {
          "success": true,
          "message": "Single param (0) successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "norm": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "norm_inf": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "norm_l1": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "ones": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.ones() missing 2 required positional arguments: 'rows' and 'cols'",
          "result_type": null,
          "has_signature_info": false
        },
        "power": {
          "success": true,
          "message": "Single param (0) successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "preview": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "qr_decomposition": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "rank": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "relu": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "repeat": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.repeat() missing 2 required positional arguments: 'repeats' and 'axis'",
          "result_type": null,
          "has_signature_info": false
        },
        "requires_grad": {
          "success": true,
          "message": "Property access successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "requires_grad_": {
          "success": true,
          "message": "Single param (True) successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "reshape": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.reshape() missing 2 required positional arguments: 'new_rows' and 'new_cols'",
          "result_type": null,
          "has_signature_info": false
        },
        "rich_display": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "scalar_multiply": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.scalar_multiply() missing 1 required positional argument: 'scalar'",
          "result_type": null,
          "has_signature_info": false
        },
        "set": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.set() missing 3 required positional arguments: 'row', 'col', and 'value'",
          "result_type": null,
          "has_signature_info": false
        },
        "shape": {
          "success": true,
          "message": "Property access successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "sigmoid": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "softmax": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "solve": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.solve() missing 1 required positional argument: 'b'",
          "result_type": null,
          "has_signature_info": false
        },
        "split": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.split() missing 2 required positional arguments: 'split_points' and 'axis'",
          "result_type": null,
          "has_signature_info": false
        },
        "sqrt": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "stack": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.stack() missing 2 required positional arguments: 'other' and 'axis'",
          "result_type": null,
          "has_signature_info": false
        },
        "std_axis": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "sum": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "sum_axis": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "summary": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "svd": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "tanh": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "tile": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.tile() missing 1 required positional argument: 'reps'",
          "result_type": null,
          "has_signature_info": false
        },
        "to_base_array": {
          "success": true,
          "message": "No-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": false
        },
        "to_degree_matrix": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "to_dict": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "to_laplacian": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "to_list": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "to_normalized_laplacian": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "to_numpy": {
          "success": true,
          "message": "No-args call successful: ndarray",
          "result_type": "ndarray",
          "has_signature_info": false
        },
        "to_pandas": {
          "success": true,
          "message": "No-args call successful: DataFrame",
          "result_type": "DataFrame",
          "has_signature_info": false
        },
        "to_table_for_streaming": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": false
        },
        "trace": {
          "success": true,
          "message": "No-args call successful: float",
          "result_type": "float",
          "has_signature_info": false
        },
        "transpose": {
          "success": true,
          "message": "No-args call successful: GraphMatrix",
          "result_type": "GraphMatrix",
          "has_signature_info": false
        },
        "var_axis": {
          "success": true,
          "message": "Single param (0) successful: NumArray",
          "result_type": "NumArray",
          "has_signature_info": false
        },
        "zero_grad": {
          "success": false,
          "message": "Method execution failed: Gradient clearing failed: InvalidInput(\"No computation graph available for gradient clearing\")",
          "result_type": null,
          "has_signature_info": false
        },
        "zeros": {
          "success": false,
          "message": "Parameter required but none worked: GraphMatrix.zeros() missing 2 required positional arguments: 'rows' and 'cols'",
          "result_type": null,
          "has_signature_info": false
        }
      },
      "success_rate": 74.19354838709677,
      "creation_status": "success"
    },
    "AttrName": {
      "object_name": "AttrName",
      "object_type": "str",
      "total_methods": 47,
      "successful_methods": 36,
      "failed_methods": 11,
      "methods": {
        "capitalize": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "casefold": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "center": {
          "success": false,
          "message": "With-args failed: center expected at least 1 argument, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "count": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "encode": {
          "success": true,
          "message": "No-args call successful: bytes",
          "result_type": "bytes",
          "has_signature_info": true
        },
        "endswith": {
          "success": true,
          "message": "Single param () successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "expandtabs": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "find": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "format": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "format_map": {
          "success": true,
          "message": "Single param (None) successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "index": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "isalnum": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isalpha": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isascii": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isdecimal": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isdigit": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isidentifier": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "islower": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isnumeric": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isprintable": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isspace": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "istitle": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isupper": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "join": {
          "success": false,
          "message": "With-args failed: str.join() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "ljust": {
          "success": false,
          "message": "With-args failed: ljust expected at least 1 argument, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "lower": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "lstrip": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "maketrans": {
          "success": true,
          "message": "Single param ({}) successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "partition": {
          "success": false,
          "message": "With-args failed: str.partition() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "removeprefix": {
          "success": false,
          "message": "With-args failed: str.removeprefix() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "removesuffix": {
          "success": false,
          "message": "With-args failed: str.removesuffix() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "replace": {
          "success": false,
          "message": "With-args failed: replace expected at least 2 arguments, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "rfind": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "rindex": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "rjust": {
          "success": false,
          "message": "With-args failed: rjust expected at least 1 argument, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "rpartition": {
          "success": false,
          "message": "With-args failed: str.rpartition() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "rsplit": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "rstrip": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "split": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "splitlines": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "startswith": {
          "success": true,
          "message": "Single param () successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "strip": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "swapcase": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "title": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "translate": {
          "success": false,
          "message": "With-args failed: str.translate() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "upper": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "zfill": {
          "success": false,
          "message": "With-args failed: str.zfill() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 76.59574468085107,
      "creation_status": "success"
    },
    "BaseTable": {
      "object_name": "BaseTable",
      "object_type": "BaseTable",
      "total_methods": 101,
      "successful_methods": 41,
      "failed_methods": 60,
      "methods": {
        "add_prefix": {
          "success": false,
          "message": "With-args failed: BaseTable.add_prefix() missing 1 required positional argument: 'prefix'",
          "result_type": null,
          "has_signature_info": true
        },
        "add_suffix": {
          "success": false,
          "message": "With-args failed: BaseTable.add_suffix() missing 1 required positional argument: 'suffix'",
          "result_type": null,
          "has_signature_info": true
        },
        "agg": {
          "success": false,
          "message": "With-args failed: BaseTable.agg() missing 1 required positional argument: 'agg_specs'",
          "result_type": null,
          "has_signature_info": true
        },
        "aggregate": {
          "success": false,
          "message": "With-args failed: BaseTable.aggregate() missing 1 required positional argument: 'agg_specs'",
          "result_type": null,
          "has_signature_info": true
        },
        "append": {
          "success": false,
          "message": "With-args failed: BaseTable.append() missing 1 required positional argument: 'row_data'",
          "result_type": null,
          "has_signature_info": true
        },
        "append_row": {
          "success": false,
          "message": "With-args failed: BaseTable.append_row() missing 1 required positional argument: 'row'",
          "result_type": null,
          "has_signature_info": true
        },
        "apply": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "apply_to_columns": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "apply_to_rows": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "assign": {
          "success": false,
          "message": "With-args failed: BaseTable.assign() missing 1 required positional argument: 'updates'",
          "result_type": null,
          "has_signature_info": true
        },
        "check_outliers": {
          "success": false,
          "message": "With-args failed: InvalidInput(\"Column 'name' contains no numeric values\")",
          "result_type": null,
          "has_signature_info": true
        },
        "column": {
          "success": true,
          "message": "With-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "column_info": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "column_names": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "columns": {
          "success": true,
          "message": "Property access successful: list",
          "result_type": "list",
          "has_signature_info": false
        },
        "corr": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "corr_columns": {
          "success": false,
          "message": "With-args failed: BaseTable.corr_columns() missing 2 required positional arguments: 'col1' and 'col2'",
          "result_type": null,
          "has_signature_info": true
        },
        "cov": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "cov_columns": {
          "success": false,
          "message": "With-args failed: BaseTable.cov_columns() missing 2 required positional arguments: 'col1' and 'col2'",
          "result_type": null,
          "has_signature_info": true
        },
        "cummax": {
          "success": true,
          "message": "With-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "cummin": {
          "success": true,
          "message": "With-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "cumsum": {
          "success": true,
          "message": "With-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "describe": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "drop_columns": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "drop_duplicates": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "drop_rows": {
          "success": false,
          "message": "With-args failed: BaseTable.drop_rows() missing 1 required positional argument: 'indices'",
          "result_type": null,
          "has_signature_info": true
        },
        "dropna": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "dropna_subset": {
          "success": false,
          "message": "With-args failed: BaseTable.dropna_subset() missing 1 required positional argument: 'subset'",
          "result_type": null,
          "has_signature_info": true
        },
        "expanding": {
          "success": false,
          "message": "With-args failed: BaseTable.expanding() missing 1 required positional argument: 'operation'",
          "result_type": null,
          "has_signature_info": true
        },
        "expanding_all": {
          "success": false,
          "message": "With-args failed: BaseTable.expanding_all() missing 1 required positional argument: 'operation'",
          "result_type": null,
          "has_signature_info": true
        },
        "extend": {
          "success": false,
          "message": "With-args failed: BaseTable.extend() missing 1 required positional argument: 'rows_data'",
          "result_type": null,
          "has_signature_info": true
        },
        "extend_rows": {
          "success": false,
          "message": "With-args failed: BaseTable.extend_rows() missing 1 required positional argument: 'rows'",
          "result_type": null,
          "has_signature_info": true
        },
        "fillna": {
          "success": false,
          "message": "With-args failed: BaseTable.fillna() missing 1 required positional argument: 'fill_values'",
          "result_type": null,
          "has_signature_info": true
        },
        "fillna_all": {
          "success": false,
          "message": "With-args failed: BaseTable.fillna_all() missing 1 required positional argument: 'fill_value'",
          "result_type": null,
          "has_signature_info": true
        },
        "filter": {
          "success": false,
          "message": "With-args failed: BaseTable.filter() missing 1 required positional argument: 'predicate'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_csv": {
          "success": false,
          "message": "With-args failed: BaseTable.from_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_dict": {
          "success": false,
          "message": "With-args failed: BaseTable.from_dict() missing 1 required positional argument: 'data'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_json": {
          "success": false,
          "message": "With-args failed: BaseTable.from_json() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "from_parquet": {
          "success": false,
          "message": "With-args failed: BaseTable.from_parquet() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "get_column_numeric": {
          "success": false,
          "message": "With-args failed: Column 'name' contains non-numeric data and cannot be converted to numeric array",
          "result_type": null,
          "has_signature_info": true
        },
        "get_column_raw": {
          "success": true,
          "message": "With-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "get_percentile": {
          "success": false,
          "message": "With-args failed: BaseTable.get_percentile() missing 1 required positional argument: 'percentile'",
          "result_type": null,
          "has_signature_info": true
        },
        "group_by": {
          "success": true,
          "message": "With-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "group_by_agg": {
          "success": false,
          "message": "With-args failed: BaseTable.group_by_agg() missing 2 required positional arguments: 'group_cols' and 'agg_specs'",
          "result_type": null,
          "has_signature_info": true
        },
        "groupby": {
          "success": false,
          "message": "With-args failed: BaseTable.groupby() missing 1 required positional argument: 'by'",
          "result_type": null,
          "has_signature_info": true
        },
        "groupby_single": {
          "success": true,
          "message": "With-args call successful: TableArray",
          "result_type": "TableArray",
          "has_signature_info": true
        },
        "has_column": {
          "success": true,
          "message": "With-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "has_nulls": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "head": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "intersect": {
          "success": false,
          "message": "With-args failed: BaseTable.intersect() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": true
        },
        "is_empty": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isin": {
          "success": false,
          "message": "With-args failed: BaseTable.isin() missing 1 required positional argument: 'values'",
          "result_type": null,
          "has_signature_info": true
        },
        "isna": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "iter": {
          "success": true,
          "message": "No-args call successful: BaseTableRowIterator",
          "result_type": "BaseTableRowIterator",
          "has_signature_info": true
        },
        "join": {
          "success": false,
          "message": "With-args failed: BaseTable.join() missing 2 required positional arguments: 'other' and 'on'",
          "result_type": null,
          "has_signature_info": true
        },
        "median": {
          "success": false,
          "message": "With-args failed: InvalidInput(\"Cannot compute median of non-numeric data type: Text(\\\"test1\\\")\")",
          "result_type": null,
          "has_signature_info": true
        },
        "melt": {
          "success": false,
          "message": "With-args failed: BaseTable.melt() missing 1 required positional argument: 'value_vars'",
          "result_type": null,
          "has_signature_info": true
        },
        "ncols": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "nlargest": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "notna": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "nrows": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "nsmallest": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "null_counts": {
          "success": true,
          "message": "No-args call successful: dict",
          "result_type": "dict",
          "has_signature_info": true
        },
        "parse_join_on": {
          "success": false,
          "message": "With-args failed: BaseTable.parse_join_on() missing 1 required positional argument: 'on'",
          "result_type": null,
          "has_signature_info": true
        },
        "pct_change": {
          "success": true,
          "message": "With-args call successful: BaseArray",
          "result_type": "BaseArray",
          "has_signature_info": true
        },
        "percentile": {
          "success": false,
          "message": "With-args failed: BaseTable.percentile() missing 1 required positional argument: 'percentile'",
          "result_type": null,
          "has_signature_info": true
        },
        "percentiles": {
          "success": false,
          "message": "With-args failed: BaseTable.percentiles() missing 1 required positional argument: 'percentiles'",
          "result_type": null,
          "has_signature_info": true
        },
        "pivot_table": {
          "success": false,
          "message": "With-args failed: BaseTable.pivot_table() missing 1 required positional argument: 'aggfunc'",
          "result_type": null,
          "has_signature_info": true
        },
        "profile": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "quantile": {
          "success": false,
          "message": "With-args failed: BaseTable.quantile() missing 1 required positional argument: 'q'",
          "result_type": null,
          "has_signature_info": true
        },
        "quantiles": {
          "success": false,
          "message": "With-args failed: BaseTable.quantiles() missing 1 required positional argument: 'quantiles'",
          "result_type": null,
          "has_signature_info": true
        },
        "query": {
          "success": false,
          "message": "With-args failed: BaseTable.query() missing 1 required positional argument: 'expr'",
          "result_type": null,
          "has_signature_info": true
        },
        "rename": {
          "success": false,
          "message": "With-args failed: argument 'columns': 'list' object cannot be converted to 'PyDict'",
          "result_type": null,
          "has_signature_info": true
        },
        "reorder_columns": {
          "success": false,
          "message": "With-args failed: BaseTable.reorder_columns() missing 1 required positional argument: 'new_order'",
          "result_type": null,
          "has_signature_info": true
        },
        "rich_display": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "rolling": {
          "success": false,
          "message": "With-args failed: BaseTable.rolling() missing 2 required positional arguments: 'window' and 'operation'",
          "result_type": null,
          "has_signature_info": true
        },
        "rolling_all": {
          "success": false,
          "message": "With-args failed: BaseTable.rolling_all() missing 2 required positional arguments: 'window' and 'operation'",
          "result_type": null,
          "has_signature_info": true
        },
        "sample": {
          "success": false,
          "message": "Method execution failed: Sampling failed: InvalidInput(\"Must specify either n or fraction\")",
          "result_type": null,
          "has_signature_info": true
        },
        "select": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "set_column": {
          "success": false,
          "message": "With-args failed: BaseTable.set_column() missing 1 required positional argument: 'values'",
          "result_type": null,
          "has_signature_info": true
        },
        "set_value": {
          "success": false,
          "message": "With-args failed: BaseTable.set_value() missing 2 required positional arguments: 'column_name' and 'value'",
          "result_type": null,
          "has_signature_info": true
        },
        "set_values_by_mask": {
          "success": false,
          "message": "With-args failed: BaseTable.set_values_by_mask() missing 2 required positional arguments: 'column_name' and 'value'",
          "result_type": null,
          "has_signature_info": true
        },
        "set_values_by_range": {
          "success": false,
          "message": "With-args failed: BaseTable.set_values_by_range() missing 3 required positional arguments: 'end', 'column_name', and 'value'",
          "result_type": null,
          "has_signature_info": true
        },
        "shape": {
          "success": true,
          "message": "Property access successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "shift": {
          "success": false,
          "message": "With-args failed: BaseTable.shift() missing 1 required positional argument: 'periods'",
          "result_type": null,
          "has_signature_info": true
        },
        "slice": {
          "success": false,
          "message": "With-args failed: BaseTable.slice() missing 2 required positional arguments: 'start' and 'end'",
          "result_type": null,
          "has_signature_info": true
        },
        "sort_by": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "sort_values": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "std": {
          "success": false,
          "message": "With-args failed: InvalidInput(\"Cannot compute mean of non-numeric data type: Text(\\\"test1\\\")\")",
          "result_type": null,
          "has_signature_info": true
        },
        "tail": {
          "success": true,
          "message": "No-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "to_csv": {
          "success": false,
          "message": "With-args failed: BaseTable.to_csv() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_edges_table": {
          "success": false,
          "message": "With-args failed: 'list' object is not callable",
          "result_type": null,
          "has_signature_info": true
        },
        "to_json": {
          "success": false,
          "message": "With-args failed: BaseTable.to_json() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_nodes_table": {
          "success": false,
          "message": "With-args failed: 'list' object is not callable",
          "result_type": null,
          "has_signature_info": true
        },
        "to_pandas": {
          "success": true,
          "message": "No-args call successful: DataFrame",
          "result_type": "DataFrame",
          "has_signature_info": true
        },
        "to_parquet": {
          "success": false,
          "message": "With-args failed: BaseTable.to_parquet() missing 1 required positional argument: 'path'",
          "result_type": null,
          "has_signature_info": true
        },
        "to_type": {
          "success": false,
          "message": "With-args failed: BaseTable.to_type() missing 1 required positional argument: 'dtype'",
          "result_type": null,
          "has_signature_info": true
        },
        "union": {
          "success": false,
          "message": "With-args failed: BaseTable.union() missing 1 required positional argument: 'other'",
          "result_type": null,
          "has_signature_info": true
        },
        "validate_schema": {
          "success": false,
          "message": "With-args failed: argument 'expected_columns': 'str' object cannot be converted to 'PyDict'",
          "result_type": null,
          "has_signature_info": true
        },
        "value_counts": {
          "success": true,
          "message": "With-args call successful: BaseTable",
          "result_type": "BaseTable",
          "has_signature_info": true
        },
        "var": {
          "success": false,
          "message": "With-args failed: InvalidInput(\"Cannot compute mean of non-numeric data type: Text(\\\"test1\\\")\")",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 40.5940594059406,
      "creation_status": "success"
    },
    "BranchName": {
      "object_name": "BranchName",
      "object_type": "str",
      "total_methods": 47,
      "successful_methods": 36,
      "failed_methods": 11,
      "methods": {
        "capitalize": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "casefold": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "center": {
          "success": false,
          "message": "With-args failed: center expected at least 1 argument, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "count": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "encode": {
          "success": true,
          "message": "No-args call successful: bytes",
          "result_type": "bytes",
          "has_signature_info": true
        },
        "endswith": {
          "success": true,
          "message": "Single param () successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "expandtabs": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "find": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "format": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "format_map": {
          "success": true,
          "message": "Single param (None) successful: str",
          "result_type": "str",
          "has_signature_info": false
        },
        "index": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "isalnum": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isalpha": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isascii": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isdecimal": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isdigit": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isidentifier": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "islower": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isnumeric": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isprintable": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isspace": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "istitle": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "isupper": {
          "success": true,
          "message": "No-args call successful: bool",
          "result_type": "bool",
          "has_signature_info": true
        },
        "join": {
          "success": false,
          "message": "With-args failed: str.join() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "ljust": {
          "success": false,
          "message": "With-args failed: ljust expected at least 1 argument, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "lower": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "lstrip": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "maketrans": {
          "success": true,
          "message": "Single param ({}) successful: dict",
          "result_type": "dict",
          "has_signature_info": false
        },
        "partition": {
          "success": false,
          "message": "With-args failed: str.partition() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "removeprefix": {
          "success": false,
          "message": "With-args failed: str.removeprefix() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "removesuffix": {
          "success": false,
          "message": "With-args failed: str.removesuffix() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "replace": {
          "success": false,
          "message": "With-args failed: replace expected at least 2 arguments, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "rfind": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "rindex": {
          "success": true,
          "message": "Single param () successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "rjust": {
          "success": false,
          "message": "With-args failed: rjust expected at least 1 argument, got 0",
          "result_type": null,
          "has_signature_info": true
        },
        "rpartition": {
          "success": false,
          "message": "With-args failed: str.rpartition() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "rsplit": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "rstrip": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "split": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "splitlines": {
          "success": true,
          "message": "No-args call successful: list",
          "result_type": "list",
          "has_signature_info": true
        },
        "startswith": {
          "success": true,
          "message": "Single param () successful: bool",
          "result_type": "bool",
          "has_signature_info": false
        },
        "strip": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "swapcase": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "title": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "translate": {
          "success": false,
          "message": "With-args failed: str.translate() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        },
        "upper": {
          "success": true,
          "message": "No-args call successful: str",
          "result_type": "str",
          "has_signature_info": true
        },
        "zfill": {
          "success": false,
          "message": "With-args failed: str.zfill() takes exactly one argument (0 given)",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 76.59574468085107,
      "creation_status": "success"
    },
    "DisplayConfig": {
      "object_name": "DisplayConfig",
      "object_type": "DisplayConfig",
      "total_methods": 3,
      "successful_methods": 3,
      "failed_methods": 0,
      "methods": {
        "default": {
          "success": true,
          "message": "No-args call successful: DisplayConfig",
          "result_type": "DisplayConfig",
          "has_signature_info": true
        },
        "max_cols": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "max_rows": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        }
      },
      "success_rate": 100.0,
      "creation_status": "success"
    },
    "EdgeId": {
      "object_name": "EdgeId",
      "object_type": "int",
      "total_methods": 9,
      "successful_methods": 7,
      "failed_methods": 2,
      "methods": {
        "as_integer_ratio": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "bit_length": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "conjugate": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "denominator": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "from_bytes": {
          "success": false,
          "message": "With-args failed: from_bytes() missing required argument 'bytes' (pos 1)",
          "result_type": null,
          "has_signature_info": true
        },
        "imag": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "numerator": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "real": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "to_bytes": {
          "success": false,
          "message": "With-args failed: to_bytes() missing required argument 'length' (pos 1)",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 77.77777777777779,
      "creation_status": "success"
    },
    "GroggyError": {
      "object_name": "GroggyError",
      "object_type": "GroggyError",
      "total_methods": 2,
      "successful_methods": 2,
      "failed_methods": 0,
      "methods": {
        "args": {
          "success": true,
          "message": "Property access successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "with_traceback": {
          "success": true,
          "message": "Single param (None) successful: GroggyError",
          "result_type": "GroggyError",
          "has_signature_info": false
        }
      },
      "success_rate": 100.0,
      "creation_status": "success"
    },
    "InvalidInputError": {
      "object_name": "InvalidInputError",
      "object_type": "InvalidInputError",
      "total_methods": 2,
      "successful_methods": 2,
      "failed_methods": 0,
      "methods": {
        "args": {
          "success": true,
          "message": "Property access successful: tuple",
          "result_type": "tuple",
          "has_signature_info": false
        },
        "with_traceback": {
          "success": true,
          "message": "Single param (None) successful: InvalidInputError",
          "result_type": "InvalidInputError",
          "has_signature_info": false
        }
      },
      "success_rate": 100.0,
      "creation_status": "success"
    },
    "NodeId": {
      "object_name": "NodeId",
      "object_type": "int",
      "total_methods": 9,
      "successful_methods": 7,
      "failed_methods": 2,
      "methods": {
        "as_integer_ratio": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "bit_length": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "conjugate": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "denominator": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "from_bytes": {
          "success": false,
          "message": "With-args failed: from_bytes() missing required argument 'bytes' (pos 1)",
          "result_type": null,
          "has_signature_info": true
        },
        "imag": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "numerator": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "real": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "to_bytes": {
          "success": false,
          "message": "With-args failed: to_bytes() missing required argument 'length' (pos 1)",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 77.77777777777779,
      "creation_status": "success"
    },
    "StateId": {
      "object_name": "StateId",
      "object_type": "int",
      "total_methods": 9,
      "successful_methods": 7,
      "failed_methods": 2,
      "methods": {
        "as_integer_ratio": {
          "success": true,
          "message": "No-args call successful: tuple",
          "result_type": "tuple",
          "has_signature_info": true
        },
        "bit_length": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": true
        },
        "conjugate": {
          "success": true,
          "message": "No-args call successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "denominator": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "from_bytes": {
          "success": false,
          "message": "With-args failed: from_bytes() missing required argument 'bytes' (pos 1)",
          "result_type": null,
          "has_signature_info": true
        },
        "imag": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "numerator": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "real": {
          "success": true,
          "message": "Property access successful: int",
          "result_type": "int",
          "has_signature_info": false
        },
        "to_bytes": {
          "success": false,
          "message": "With-args failed: to_bytes() missing required argument 'length' (pos 1)",
          "result_type": null,
          "has_signature_info": true
        }
      },
      "success_rate": 77.77777777777779,
      "creation_status": "success"
    }
  },
  "summary": {
    "overall_stats": {
      "total_objects_tested": 27,
      "total_methods_tested": 921,
      "total_successful_methods": 613,
      "total_failed_methods": 308,
      "overall_success_rate": 66.55808903365906,
      "objects_created": 27,
      "objects_failed_creation": 0
    },
    "object_categories": {
      "excellent": [
        "DisplayConfig",
        "GroggyError",
        "InvalidInputError"
      ],
      "good": [
        "NumArray_from_builder",
        "EdgesAccessor",
        "NumArray",
        "NodesAccessor",
        "EdgesArray",
        "ComponentsArray",
        "EdgeId",
        "NodeId",
        "StateId",
        "Graph",
        "AttrName",
        "BranchName",
        "GraphMatrix_from_builder",
        "BaseArray_from_builder",
        "SubgraphArray"
      ],
      "needs_work": [
        "NodesArray",
        "BaseTable_from_builder",
        "EdgesTable",
        "NodesTable",
        "TableArray",
        "GraphTable",
        "GraphMatrix",
        "Subgraph"
      ],
      "critical": [
        "BaseTable"
      ]
    },
    "top_performers": [
      [
        "DisplayConfig",
        100.0
      ],
      [
        "GroggyError",
        100.0
      ],
      [
        "InvalidInputError",
        100.0
      ],
      [
        "NumArray_from_builder",
        88.23529411764706
      ],
      [
        "EdgesAccessor",
        87.5
      ]
    ],
    "needs_attention": [
      [
        "TableArray",
        62.5
      ],
      [
        "GraphTable",
        59.09090909090909
      ],
      [
        "GraphMatrix",
        53.76344086021505
      ],
      [
        "Subgraph",
        53.333333333333336
      ],
      [
        "BaseTable",
        40.5940594059406
      ]
    ],
    "release_readiness": {
      "excellent_objects": 3,
      "good_objects": 15,
      "problematic_objects": 9,
      "ready_for_release": false
    }
  },
  "timestamp": "20251007_213534",
  "api_stats": {
    "nodes": 41,
    "edges": 544,
    "types_discovered": 41
  }
}