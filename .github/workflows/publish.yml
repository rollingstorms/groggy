name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-14]  # macos-14 for Apple Silicon

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.16.2

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        # Build for Python 3.8-3.12
        CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
        # Skip 32-bit builds and old architectures
        CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_i686"
        # Install Rust and maturin before building
        CIBW_BEFORE_ALL_LINUX: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source ~/.cargo/env
        CIBW_BEFORE_BUILD: pip install maturin
        # Use maturin to build
        CIBW_BUILD_COMMAND: maturin build --release --interpreter python --out {wheel_dir}
        # Test the built wheels
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: pytest {project}/tests/

    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin

    - name: Build sdist
      run: maturin sdist --out dist

    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*.tar.gz

  upload-pypi:
    name: Upload to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/groggy
    permissions:
      id-token: write  # For trusted publishing

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
