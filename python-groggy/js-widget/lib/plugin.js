define(["@jupyter-widgets/base"],t=>(()=>{"use strict";var e={55:e=>{e.exports=t}},i={};function o(t){var n=i[t];if(void 0!==n)return n.exports;var s=i[t]={exports:{}};return e[t](s,s.exports,o),s.exports}o.d=(t,e)=>{for(var i in e)o.o(e,i)&&!o.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};o.r(n),o.d(n,{default:()=>c});var s=o(55);const r="groggy-widgets",d="0.1.0";class a extends s.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:"GroggyGraphModel",_model_module:r,_model_module_version:d,_view_name:"GroggyGraphView",_view_module:r,_view_module_version:d,nodes:[],edges:[],title:"Graph Visualization"})}}a.model_name="GroggyGraphModel",a.model_module=r,a.model_module_version=d;class l extends s.DOMWidgetView{constructor(){super(...arguments),this.nodePositions=new Map,this.nodeVelocities=new Map,this.isDragging=!1,this.draggedNode=null,this.dragOffset={x:0,y:0},this.animationId=null,this.simulation={alpha:1,alphaDecay:.0228,alphaMin:.001,velocityDecay:.4,forceStrength:30,linkDistance:50,linkStrength:.1,chargeStrength:-300,centerStrength:.1}}render(){this.el.style.cssText="\n      border: 2px solid #4CAF50;\n      padding: 10px;\n      margin: 10px;\n      border-radius: 8px;\n      background: #f9f9f9;\n      font-family: Arial, sans-serif;\n      min-height: 400px;\n      position: relative;\n      user-select: none;\n    ";const t=document.createElement("div");t.style.cssText="\n      font-weight: bold;\n      margin-bottom: 10px;\n      color: #333;\n    ",t.textContent=this.model.get("title")||"Graph Visualization",this.el.appendChild(t);const e=document.createElement("div");e.style.cssText="\n      width: 100%;\n      height: 350px;\n      border: 1px solid #ddd;\n      background: white;\n      position: relative;\n      overflow: hidden;\n      cursor: grab;\n    ",this.el.appendChild(e),this.renderGraph(e),this.model.on("change",this.onModelChange,this)}renderGraph(t){const e=this.model.get("nodes")||[],i=this.model.get("edges")||[];if(t.innerHTML="",0===e.length)return void(t.innerHTML='\n        <div style="\n          display: flex; \n          align-items: center; \n          justify-content: center; \n          height: 100%; \n          color: #666;\n          font-style: italic;\n        ">\n          No graph data provided. Add nodes and edges to see visualization.\n        </div>\n      ');const o=document.createElementNS("http://www.w3.org/2000/svg","svg");o.setAttribute("width","100%"),o.setAttribute("height","100%"),o.style.cursor="grab",t.appendChild(o);const n=t.clientWidth/2,s=t.clientHeight/2;0===this.nodePositions.size&&(e.forEach(t=>{const e=2*Math.random()*Math.PI,i=100*Math.random(),o=n+i*Math.cos(e),r=s+i*Math.sin(e);this.nodePositions.set(t.id,{x:o,y:r}),this.nodeVelocities.set(t.id,{vx:0,vy:0})}),this.startForceSimulation(e,i,n,s));const r=[];i.forEach(t=>{const e=this.nodePositions.get(t.source),i=this.nodePositions.get(t.target);if(e&&i){const t=document.createElementNS("http://www.w3.org/2000/svg","line");t.setAttribute("x1",e.x.toString()),t.setAttribute("y1",e.y.toString()),t.setAttribute("x2",i.x.toString()),t.setAttribute("y2",i.y.toString()),t.setAttribute("stroke","#999"),t.setAttribute("stroke-width","2"),t.setAttribute("opacity","0.6"),o.appendChild(t),r.push(t)}}),e.forEach(t=>{const e=this.nodePositions.get(t.id);if(!e)return;const n=document.createElementNS("http://www.w3.org/2000/svg","g");n.style.cursor="grab";const s=document.createElementNS("http://www.w3.org/2000/svg","circle");s.setAttribute("cx",e.x.toString()),s.setAttribute("cy",e.y.toString()),s.setAttribute("r",(t.size||20).toString()),s.setAttribute("fill",this.getNodeColor(t.group)),s.setAttribute("stroke","#333"),s.setAttribute("stroke-width","2"),s.style.filter="drop-shadow(2px 2px 4px rgba(0,0,0,0.3))";const d=document.createElementNS("http://www.w3.org/2000/svg","text");d.setAttribute("x",e.x.toString()),d.setAttribute("y",(e.y+5).toString()),d.setAttribute("text-anchor","middle"),d.setAttribute("font-family","Arial, sans-serif"),d.setAttribute("font-size","12"),d.setAttribute("fill","#333"),d.setAttribute("pointer-events","none"),d.textContent=t.label||t.id,n.appendChild(s),n.appendChild(d),o.appendChild(n),this.addDragBehavior(n,t,s,d,r,i)});const d=document.createElement("div");d.style.cssText="\n      position: absolute;\n      top: 5px;\n      right: 5px;\n      background: rgba(255,255,255,0.9);\n      padding: 5px;\n      border-radius: 3px;\n      font-size: 12px;\n      color: #666;\n    ",d.innerHTML=`${e.length} nodes, ${i.length} edges<br><small>Drag nodes to reposition</small>`,t.appendChild(d)}addDragBehavior(t,e,i,o,n,s){let r=0,d=0,a=!1;const l=e=>{a=!0,r=e.clientX,d=e.clientY,t.style.cursor="grabbing",i.setAttribute("stroke-width","3"),e.preventDefault()},c=t=>{if(!a)return;const l=t.clientX-r,c=t.clientY-d,g=this.nodePositions.get(e.id);if(!g)return;const h=g.x+l,u=g.y+c;this.nodePositions.set(e.id,{x:h,y:u}),i.setAttribute("cx",h.toString()),i.setAttribute("cy",u.toString()),o.setAttribute("x",h.toString()),o.setAttribute("y",(u+5).toString()),this.updateEdges(e.id,n,s),r=t.clientX,d=t.clientY},g=()=>{a=!1,t.style.cursor="grab",i.setAttribute("stroke-width","2")};t.addEventListener("mousedown",l),document.addEventListener("mousemove",c),document.addEventListener("mouseup",g),t.addEventListener("touchstart",t=>{const e=t.touches[0];l({clientX:e.clientX,clientY:e.clientY,preventDefault:()=>t.preventDefault()})}),document.addEventListener("touchmove",t=>{if(a){const e=t.touches[0];c({clientX:e.clientX,clientY:e.clientY}),t.preventDefault()}}),document.addEventListener("touchend",g),t.addEventListener("mouseenter",()=>{a||(i.setAttribute("opacity","0.8"),i.style.filter="drop-shadow(3px 3px 6px rgba(0,0,0,0.4))")}),t.addEventListener("mouseleave",()=>{a||(i.setAttribute("opacity","1"),i.style.filter="drop-shadow(2px 2px 4px rgba(0,0,0,0.3))")})}updateEdges(t,e,i){i.forEach((i,o)=>{if(i.source===t||i.target===t){const t=this.nodePositions.get(i.source),n=this.nodePositions.get(i.target);t&&n&&e[o]&&(e[o].setAttribute("x1",t.x.toString()),e[o].setAttribute("y1",t.y.toString()),e[o].setAttribute("x2",n.x.toString()),e[o].setAttribute("y2",n.y.toString()))}})}getNodeColor(t){return{person:"#FF6B6B",team:"#4ECDC4",project:"#45B7D1",executive:"#96CEB4",manager:"#FFEAA7",lead:"#DDA0DD",developer:"#98D8C8",product:"#F7DC6F",application:"#85C1E9",service:"#F8C471",storage:"#82E0AA",infrastructure:"#D7BDE2",core:"#F1948A",satellite:"#AED6F1"}[t]||"#BDC3C7"}onModelChange(){const t=this.el.querySelector("div:last-child");t&&this.renderGraph(t);const e=this.el.querySelector("div:first-child");e&&(e.textContent=this.model.get("title")||"Graph Visualization")}startForceSimulation(t,e,i,o){const n=new Map;t.forEach(t=>{n.set(t.id,{x:0,y:0})});for(let i=0;i<100;i++){const i=new Map;t.forEach(t=>{i.set(t.id,{x:0,y:0})});for(let e=0;e<t.length;e++)for(let o=e+1;o<t.length;o++){const n=t[e],s=t[o],r=this.nodePositions.get(n.id),d=this.nodePositions.get(s.id);if(r&&d){const t=d.x-r.x,e=d.y-r.y,o=Math.sqrt(t*t+e*e)||1,a=1e3/(o*o),l=a*t/o,c=a*e/o,g=i.get(n.id),h=i.get(s.id);g&&h&&(g.x-=l,g.y-=c,h.x+=l,h.y+=c)}}e.forEach(t=>{const e=this.nodePositions.get(t.source),o=this.nodePositions.get(t.target),n=i.get(t.source),s=i.get(t.target);if(e&&o&&n&&s){const t=o.x-e.x,i=o.y-e.y,r=Math.sqrt(t*t+i*i)||1,d=.1*r,a=d*t/r,l=d*i/r;n.x+=a,n.y+=l,s.x-=a,s.y-=l}}),t.forEach(t=>{const e=this.nodePositions.get(t.id),o=n.get(t.id),s=i.get(t.id);e&&o&&s&&(o.x+=.01*s.x,o.y+=.01*s.y,o.x*=.9,o.y*=.9,e.x+=o.x,e.y+=o.y,e.x=Math.max(50,Math.min(750,e.x)),e.y=Math.max(50,Math.min(550,e.y)))})}}}l.view_name="GroggyGraphView",l.view_module=r,l.view_module_version=d;const c={id:"groggy-widgets:plugin",requires:[s.IJupyterWidgetRegistry],autoStart:!0,activate:function(t,e){console.log("[groggy-widgets] export shape fix - checking prototype chain"),console.log("types:",typeof a,typeof l),console.log("is Model subclass:",a.prototype instanceof s.DOMWidgetModel),console.log("is View  subclass:",l.prototype instanceof s.DOMWidgetView),e.registerWidget({name:r,version:d,exports:{GroggyGraphModel:a,GroggyGraphView:l}}),console.log("âœ… Export shape fix: registered actual GroggyGraphView")}};return n})());
//# sourceMappingURL=plugin.js.map