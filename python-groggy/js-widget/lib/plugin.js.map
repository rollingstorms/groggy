{"version":3,"file":"plugin.js","mappings":"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","sources":["webpack://groggy-widgets/external amd \"@jupyter-widgets/base\"","webpack://groggy-widgets/webpack/bootstrap","webpack://groggy-widgets/webpack/runtime/define property getters","webpack://groggy-widgets/webpack/runtime/hasOwnProperty shorthand","webpack://groggy-widgets/webpack/runtime/make namespace object","webpack://groggy-widgets/./src/widget.ts","webpack://groggy-widgets/./src/plugin.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__55__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DOMWidgetModel, DOMWidgetView } from '@jupyter-widgets/base';\n\nexport const MODULE_NAME = 'groggy-widgets';\nexport const MODULE_VERSION = '0.1.0';\n\nexport class GroggyGraphModel extends DOMWidgetModel {\n  static model_name = 'GroggyGraphModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n\n  defaults() {\n    return {\n      ...super.defaults(),\n      _model_name: 'GroggyGraphModel',\n      _model_module: MODULE_NAME,\n      _model_module_version: MODULE_VERSION,\n      _view_name: 'GroggyGraphView',\n      _view_module: MODULE_NAME,\n      _view_module_version: MODULE_VERSION,\n      // Graph data traits\n      nodes: [],\n      edges: [],\n      title: 'Graph Visualization',\n    };\n  }\n}\n\nexport class GroggyGraphView extends DOMWidgetView {\n  static view_name = 'GroggyGraphView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n  \n  private nodePositions = new Map();\n  private isDragging = false;\n  private dragNode: any = null;\n  private dragOffset = { x: 0, y: 0 };\n\n  render() {\n    // Create container\n    this.el.style.cssText = `\n      border: 2px solid #4CAF50;\n      padding: 10px;\n      margin: 10px;\n      border-radius: 8px;\n      background: #f9f9f9;\n      font-family: Arial, sans-serif;\n      min-height: 400px;\n      position: relative;\n      user-select: none;\n    `;\n    \n    // Create a header\n    const header = document.createElement('div');\n    header.style.cssText = `\n      font-weight: bold;\n      margin-bottom: 10px;\n      color: #333;\n    `;\n    header.textContent = this.model.get('title') || 'Graph Visualization';\n    this.el.appendChild(header);\n    \n    // Create graph container\n    const graphContainer = document.createElement('div');\n    graphContainer.style.cssText = `\n      width: 100%;\n      height: 350px;\n      border: 1px solid #ddd;\n      background: white;\n      position: relative;\n      overflow: hidden;\n      cursor: grab;\n    `;\n    this.el.appendChild(graphContainer);\n    \n    // Render basic graph visualization\n    this.renderGraph(graphContainer);\n    \n    // Listen for model changes\n    this.model.on('change', this.onModelChange, this);\n  }\n  \n  private renderGraph(container: HTMLElement) {\n    const nodes = this.model.get('nodes') || [];\n    const edges = this.model.get('edges') || [];\n    \n    // Clear container\n    container.innerHTML = '';\n    \n    if (nodes.length === 0) {\n      container.innerHTML = `\n        <div style=\"\n          display: flex; \n          align-items: center; \n          justify-content: center; \n          height: 100%; \n          color: #666;\n          font-style: italic;\n        \">\n          No graph data provided. Add nodes and edges to see visualization.\n        </div>\n      `;\n      return;\n    }\n    \n    // Create simple SVG visualization\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('height', '100%');\n    svg.style.cursor = 'grab';\n    container.appendChild(svg);\n    \n    // Simple layout: arrange nodes in a circle (if not already positioned)\n    const centerX = container.clientWidth / 2;\n    const centerY = container.clientHeight / 2;\n    const radius = Math.min(centerX, centerY) * 0.7;\n    \n    // Position nodes in circle (only if not already positioned)\n    if (this.nodePositions.size === 0) {\n      nodes.forEach((node: any, i: number) => {\n        const angle = (2 * Math.PI * i) / nodes.length;\n        const x = centerX + radius * Math.cos(angle);\n        const y = centerY + radius * Math.sin(angle);\n        this.nodePositions.set(node.id, { x, y });\n      });\n    }\n    \n    // Draw edges first (so they appear behind nodes)\n    const edgeElements: SVGLineElement[] = [];\n    edges.forEach((edge: any) => {\n      const sourcePos = this.nodePositions.get(edge.source);\n      const targetPos = this.nodePositions.get(edge.target);\n      \n      if (sourcePos && targetPos) {\n        const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        line.setAttribute('x1', sourcePos.x.toString());\n        line.setAttribute('y1', sourcePos.y.toString());\n        line.setAttribute('x2', targetPos.x.toString());\n        line.setAttribute('y2', targetPos.y.toString());\n        line.setAttribute('stroke', '#999');\n        line.setAttribute('stroke-width', '2');\n        line.setAttribute('opacity', '0.6');\n        svg.appendChild(line);\n        edgeElements.push(line);\n      }\n    });\n    \n    // Draw nodes with drag functionality\n    nodes.forEach((node: any) => {\n      const pos = this.nodePositions.get(node.id);\n      if (!pos) return;\n      \n      // Create node group for easier manipulation\n      const nodeGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      nodeGroup.style.cursor = 'grab';\n      \n      // Node circle\n      const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n      circle.setAttribute('cx', pos.x.toString());\n      circle.setAttribute('cy', pos.y.toString());\n      circle.setAttribute('r', (node.size || 20).toString());\n      circle.setAttribute('fill', this.getNodeColor(node.group));\n      circle.setAttribute('stroke', '#333');\n      circle.setAttribute('stroke-width', '2');\n      circle.style.filter = 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))';\n      \n      // Node label\n      const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      text.setAttribute('x', pos.x.toString());\n      text.setAttribute('y', (pos.y + 5).toString());\n      text.setAttribute('text-anchor', 'middle');\n      text.setAttribute('font-family', 'Arial, sans-serif');\n      text.setAttribute('font-size', '12');\n      text.setAttribute('fill', '#333');\n      text.setAttribute('pointer-events', 'none'); // Don't interfere with dragging\n      text.textContent = node.label || node.id;\n      \n      nodeGroup.appendChild(circle);\n      nodeGroup.appendChild(text);\n      svg.appendChild(nodeGroup);\n      \n      // Add drag functionality\n      this.addDragBehavior(nodeGroup, node, circle, text, edgeElements, edges);\n    });\n    \n    // Add stats\n    const stats = document.createElement('div');\n    stats.style.cssText = `\n      position: absolute;\n      top: 5px;\n      right: 5px;\n      background: rgba(255,255,255,0.9);\n      padding: 5px;\n      border-radius: 3px;\n      font-size: 12px;\n      color: #666;\n    `;\n    stats.innerHTML = `${nodes.length} nodes, ${edges.length} edges<br><small>Drag nodes to reposition</small>`;\n    container.appendChild(stats);\n  }\n  \n  private addDragBehavior(nodeGroup: SVGGElement, node: any, circle: SVGCircleElement, text: SVGTextElement, edgeElements: SVGLineElement[], edges: any[]) {\n    let startX = 0, startY = 0;\n    let isDragging = false;\n    \n    const onMouseDown = (e: MouseEvent) => {\n      isDragging = true;\n      startX = e.clientX;\n      startY = e.clientY;\n      nodeGroup.style.cursor = 'grabbing';\n      circle.setAttribute('stroke-width', '3');\n      e.preventDefault();\n    };\n    \n    const onMouseMove = (e: MouseEvent) => {\n      if (!isDragging) return;\n      \n      const deltaX = e.clientX - startX;\n      const deltaY = e.clientY - startY;\n      \n      const currentPos = this.nodePositions.get(node.id);\n      const newX = currentPos.x + deltaX;\n      const newY = currentPos.y + deltaY;\n      \n      // Update node position\n      this.nodePositions.set(node.id, { x: newX, y: newY });\n      \n      // Update visual elements\n      circle.setAttribute('cx', newX.toString());\n      circle.setAttribute('cy', newY.toString());\n      text.setAttribute('x', newX.toString());\n      text.setAttribute('y', (newY + 5).toString());\n      \n      // Update connected edges\n      this.updateEdges(node.id, edgeElements, edges);\n      \n      startX = e.clientX;\n      startY = e.clientY;\n    };\n    \n    const onMouseUp = () => {\n      isDragging = false;\n      nodeGroup.style.cursor = 'grab';\n      circle.setAttribute('stroke-width', '2');\n    };\n    \n    // Mouse events\n    nodeGroup.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    \n    // Touch events for mobile\n    nodeGroup.addEventListener('touchstart', (e) => {\n      const touch = e.touches[0];\n      onMouseDown({ clientX: touch.clientX, clientY: touch.clientY, preventDefault: () => e.preventDefault() } as any);\n    });\n    \n    document.addEventListener('touchmove', (e) => {\n      if (isDragging) {\n        const touch = e.touches[0];\n        onMouseMove({ clientX: touch.clientX, clientY: touch.clientY } as any);\n        e.preventDefault();\n      }\n    });\n    \n    document.addEventListener('touchend', onMouseUp);\n    \n    // Hover effects\n    nodeGroup.addEventListener('mouseenter', () => {\n      if (!isDragging) {\n        circle.setAttribute('opacity', '0.8');\n        circle.style.filter = 'drop-shadow(3px 3px 6px rgba(0,0,0,0.4))';\n      }\n    });\n    \n    nodeGroup.addEventListener('mouseleave', () => {\n      if (!isDragging) {\n        circle.setAttribute('opacity', '1');\n        circle.style.filter = 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))';\n      }\n    });\n  }\n  \n  private updateEdges(nodeId: string, edgeElements: SVGLineElement[], edges: any[]) {\n    edges.forEach((edge: any, index: number) => {\n      if (edge.source === nodeId || edge.target === nodeId) {\n        const sourcePos = this.nodePositions.get(edge.source);\n        const targetPos = this.nodePositions.get(edge.target);\n        \n        if (sourcePos && targetPos && edgeElements[index]) {\n          edgeElements[index].setAttribute('x1', sourcePos.x.toString());\n          edgeElements[index].setAttribute('y1', sourcePos.y.toString());\n          edgeElements[index].setAttribute('x2', targetPos.x.toString());\n          edgeElements[index].setAttribute('y2', targetPos.y.toString());\n        }\n      }\n    });\n  }\n  \n  private getNodeColor(group: string): string {\n    const colors: { [key: string]: string } = {\n      'person': '#FF6B6B',\n      'team': '#4ECDC4', \n      'project': '#45B7D1',\n      'executive': '#96CEB4',\n      'manager': '#FFEAA7',\n      'lead': '#DDA0DD',\n      'developer': '#98D8C8',\n      'product': '#F7DC6F',\n      'application': '#85C1E9',\n      'service': '#F8C471',\n      'storage': '#82E0AA',\n      'infrastructure': '#D7BDE2',\n      'core': '#F1948A',\n      'satellite': '#AED6F1'\n    };\n    return colors[group] || '#BDC3C7';\n  }\n  \n  private onModelChange() {\n    // Re-render when model data changes\n    const graphContainer = this.el.querySelector('div:last-child') as HTMLElement;\n    if (graphContainer) {\n      this.renderGraph(graphContainer);\n    }\n    \n    // Update title\n    const header = this.el.querySelector('div:first-child') as HTMLElement;\n    if (header) {\n      header.textContent = this.model.get('title') || 'Graph Visualization';\n    }\n  }\n}","import { IJupyterWidgetRegistry, DOMWidgetModel, DOMWidgetView } from '@jupyter-widgets/base';\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { GroggyGraphModel, GroggyGraphView, MODULE_NAME, MODULE_VERSION } from './widget';\n\nfunction activate(app: JupyterFrontEnd, registry: IJupyterWidgetRegistry) {\n  console.log('[groggy-widgets] export shape fix - checking prototype chain');\n  console.log('types:', typeof GroggyGraphModel, typeof GroggyGraphView); // expect function,function\n  console.log('is Model subclass:', GroggyGraphModel.prototype instanceof DOMWidgetModel);\n  console.log('is View  subclass:', GroggyGraphView.prototype  instanceof DOMWidgetView);\n\n  registry.registerWidget({\n    name: MODULE_NAME,\n    version: MODULE_VERSION,\n    exports: { GroggyGraphModel, GroggyGraphView },\n  });\n  \n  console.log('✅ Export shape fix: registered actual GroggyGraphView');\n}\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'groggy-widgets:plugin',\n  requires: [IJupyterWidgetRegistry as any],\n  autoStart: true,\n  activate,\n};\n\nexport default plugin;"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__55__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","MODULE_NAME","MODULE_VERSION","GroggyGraphModel","DOMWidgetModel","defaults","super","_model_name","_model_module","_model_module_version","_view_name","_view_module","_view_module_version","nodes","edges","title","model_name","model_module","model_module_version","GroggyGraphView","DOMWidgetView","nodePositions","Map","isDragging","dragNode","dragOffset","x","y","render","this","el","style","cssText","header","document","createElement","textContent","model","appendChild","graphContainer","renderGraph","on","onModelChange","container","innerHTML","length","svg","createElementNS","setAttribute","cursor","centerX","clientWidth","centerY","clientHeight","radius","Math","min","size","forEach","node","i","angle","PI","cos","sin","set","id","edgeElements","edge","sourcePos","source","targetPos","target","line","toString","push","pos","nodeGroup","circle","getNodeColor","group","filter","text","label","addDragBehavior","stats","startX","startY","onMouseDown","e","clientX","clientY","preventDefault","onMouseMove","deltaX","deltaY","currentPos","newX","newY","updateEdges","onMouseUp","addEventListener","touch","touches","nodeId","index","querySelector","view_name","view_module","view_module_version","requires","IJupyterWidgetRegistry","autoStart","activate","app","registry","console","log","registerWidget","name","version"],"sourceRoot":""}