{"version":3,"file":"index.js","mappings":"qFAAAA,EAAOC,QAAUC,C,UC2kBoBF,EAAOC,UACxCD,EAAOC,QApkBX,MACI,WAAAE,CAAYC,EAAWC,EAAS,CAAC,GAC7BC,KAAKF,UAAYA,EACjBE,KAAKD,OAAS,CACVE,MAAO,IACPC,OAAQ,IACRC,OAAQ,iBACRC,MAAO,QACPC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,kBAAmB,OAChBT,GAIPC,KAAKS,MAAQ,GACbT,KAAKU,MAAQ,GACbV,KAAKW,UAAY,GACjBX,KAAKY,cAAgB,GACrBZ,KAAKa,YAAc,KACnBb,KAAKc,OAAS,CAAEC,EAAG,EAAGC,EAAG,EAAGC,KAAM,GAGlCjB,KAAKkB,YAAa,EAClBlB,KAAKmB,SAAW,KAChBnB,KAAKoB,WAAY,EACjBpB,KAAKqB,UAAY,CAAEN,EAAG,EAAGC,EAAG,GAG5BhB,KAAKsB,UAAY,CACbC,UAAW,GACXC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,aAAc,GACdC,gBAAiB,IAGrB5B,KAAK6B,MACT,CAEA,IAAAA,GAEI7B,KAAK8B,OAASC,SAASC,cAAc,UACrChC,KAAK8B,OAAO7B,MAAQD,KAAKD,OAAOE,MAChCD,KAAK8B,OAAO5B,OAASF,KAAKD,OAAOG,OACjCF,KAAK8B,OAAOG,MAAMC,OAAS,iBAC3BlC,KAAK8B,OAAOG,MAAME,OAAS,UAC3BnC,KAAK8B,OAAOG,MAAMG,QAAU,QAE5BpC,KAAKqC,IAAMrC,KAAK8B,OAAOQ,WAAW,MAClCtC,KAAKF,UAAUyC,YAAYvC,KAAK8B,QAGhC9B,KAAKwC,iBAGLxC,KAAKyC,sBAELC,QAAQC,IAAI,8BAChB,CAEA,cAAAH,GACI,MAAMI,EAAcb,SAASC,cAAc,OAC3CY,EAAYX,MAAMY,QAAU,2EAM5B,MAAMC,EAAYf,SAASC,cAAc,UACzCc,EAAUC,YAAc,gBACxBD,EAAUb,MAAMY,QAAU,8NAS1BC,EAAUE,QAAU,IAAMhD,KAAKiD,eAG/B,MAAMC,EAAWnB,SAASC,cAAc,UACxCkB,EAASH,YAAc,aACvBG,EAASjB,MAAMY,QAAUC,EAAUb,MAAMY,QAAQM,QAAQ,UAAW,WACpED,EAASF,QAAU,IAAMhD,KAAKoD,cAG9B,MAAMC,EAAWtB,SAASC,cAAc,UACxCqB,EAASN,YAAc,eACvBM,EAASpB,MAAMY,QAAUC,EAAUb,MAAMY,QAAQM,QAAQ,UAAW,WACpEE,EAASL,QAAU,IAAMhD,KAAKsD,cAE9BV,EAAYL,YAAYO,GACxBF,EAAYL,YAAYW,GACxBN,EAAYL,YAAYc,GAExBrD,KAAKF,UAAUyD,aAAaX,EAAa5C,KAAK8B,QAG9C9B,KAAKwD,UAAYzB,SAASC,cAAc,OACxChC,KAAKwD,UAAUvB,MAAMY,QAAU,2RAW/B7C,KAAKF,UAAUmC,MAAMwB,SAAW,WAChCzD,KAAKF,UAAUyC,YAAYvC,KAAKwD,UACpC,CAEA,mBAAAf,GAEIzC,KAAK8B,OAAO4B,iBAAiB,YAAa1D,KAAK2D,YAAYC,KAAK5D,OAChEA,KAAK8B,OAAO4B,iBAAiB,YAAa1D,KAAK6D,YAAYD,KAAK5D,OAChEA,KAAK8B,OAAO4B,iBAAiB,UAAW1D,KAAK8D,UAAUF,KAAK5D,OAC5DA,KAAK8B,OAAO4B,iBAAiB,QAAS1D,KAAK+D,QAAQH,KAAK5D,OACxDA,KAAK8B,OAAO4B,iBAAiB,WAAY1D,KAAKgE,cAAcJ,KAAK5D,OACjEA,KAAK8B,OAAO4B,iBAAiB,QAAS1D,KAAKiE,QAAQL,KAAK5D,OACxDA,KAAK8B,OAAO4B,iBAAiB,aAAc1D,KAAKkE,aAAaN,KAAK5D,MACtE,CAGA,OAAAmE,CAAQ1D,EAAOC,GACXV,KAAKS,MAAQA,GAAS,GACtBT,KAAKU,MAAQA,GAAS,GACtBV,KAAKoE,kBACLpE,KAAKqE,SACL3B,QAAQC,IAAI,iBAAiB3C,KAAKS,MAAM6D,iBAAiBtE,KAAKU,MAAM4D,eACxE,CAEA,SAAAC,CAAUC,EAAWC,GAAU,GAC3B,MAAMC,EAAY1E,KAAKD,OAAOI,OAC9BH,KAAKD,OAAOI,OAASqE,EAEjBC,EACAzE,KAAK2E,uBAEL3E,KAAKoE,kBACLpE,KAAKqE,UAGTrE,KAAK4E,QAAQ,eAAgB,CAAEC,KAAMH,EAAWI,GAAIN,IACpD9B,QAAQC,IAAI,sBAAsB6B,IACtC,CAEA,QAAAO,CAAS3E,GACLJ,KAAKD,OAAOK,MAAQA,EACpBJ,KAAKqE,SACL3B,QAAQC,IAAI,qBAAqBvC,IACrC,CAEA,WAAA4E,CAAYC,EAASC,GAAgB,GAE7BlF,KAAKY,cADLsE,EACqB,IAAID,GAEJ,IAAI,IAAIE,IAAI,IAAInF,KAAKY,iBAAkBqE,KAEhEjF,KAAKqE,SACLrE,KAAK4E,QAAQ,kBAAmB5E,KAAKY,cACzC,CAEA,WAAAwE,CAAYC,EAAQC,EAAY,GAC5B,MAAMC,EAAOvF,KAAKS,MAAM+E,KAAKC,GAAKA,EAAEC,KAAOL,GACrCM,EAAM3F,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOL,GAE1CE,GAAQI,IAER3F,KAAKc,OAAOC,EAAIf,KAAKD,OAAOE,MAAQ,EAAI0F,EAAI5E,EAAIf,KAAKc,OAAOG,KAC5DjB,KAAKc,OAAOE,EAAIhB,KAAKD,OAAOG,OAAS,EAAIyF,EAAI3E,EAAIhB,KAAKc,OAAOG,KAC7DjB,KAAKc,OAAOG,KAAOqE,EAEnBtF,KAAKqE,SACLrE,KAAK4E,QAAQ,eAAgB5E,KAAKc,QAE1C,CAEA,WAAAsC,GACIpD,KAAKc,OAAS,CAAEC,EAAG,EAAGC,EAAG,EAAGC,KAAM,GAClCjB,KAAKoE,kBACLpE,KAAKqE,SACLrE,KAAK4E,QAAQ,eAAgB5E,KAAKc,OACtC,CAGA,WAAA6C,CAAYkC,GACR,MAAMC,EAAO9F,KAAK8B,OAAOiE,wBACnBhF,GAAK8E,EAAEG,QAAUF,EAAKG,KAAOjG,KAAKc,OAAOC,GAAKf,KAAKc,OAAOG,KAC1DD,GAAK6E,EAAEK,QAAUJ,EAAKK,IAAMnG,KAAKc,OAAOE,GAAKhB,KAAKc,OAAOG,KAEzDmF,EAAcpG,KAAKqG,WAAWtF,EAAGC,GAEnCoF,GAAepG,KAAKD,OAAOM,YAC3BL,KAAKkB,YAAa,EAClBlB,KAAKmB,SAAWiF,EAChBpG,KAAK8B,OAAOG,MAAME,OAAS,YACpBnC,KAAKD,OAAOO,YACnBN,KAAKoB,WAAY,EACjBpB,KAAKqB,UAAY,CAAEN,EAAG8E,EAAEG,QAAShF,EAAG6E,EAAEK,SACtClG,KAAK8B,OAAOG,MAAME,OAAS,WAEnC,CAEA,WAAA0B,CAAYgC,GACR,MAAMC,EAAO9F,KAAK8B,OAAOiE,wBACnBhF,GAAK8E,EAAEG,QAAUF,EAAKG,KAAOjG,KAAKc,OAAOC,GAAKf,KAAKc,OAAOG,KAC1DD,GAAK6E,EAAEK,QAAUJ,EAAKK,IAAMnG,KAAKc,OAAOE,GAAKhB,KAAKc,OAAOG,KAE/D,GAAIjB,KAAKkB,YAAclB,KAAKmB,SAAU,CAElC,MAAMwE,EAAM3F,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAO1F,KAAKmB,SAASuE,IACxDC,IACAA,EAAI5E,EAAIA,EACR4E,EAAI3E,EAAIA,EACRhB,KAAKqE,SAEb,MAAO,GAAIrE,KAAKoB,UAEZpB,KAAKc,OAAOC,GAAK8E,EAAEG,QAAUhG,KAAKqB,UAAUN,EAC5Cf,KAAKc,OAAOE,GAAK6E,EAAEK,QAAUlG,KAAKqB,UAAUL,EAC5ChB,KAAKqB,UAAY,CAAEN,EAAG8E,EAAEG,QAAShF,EAAG6E,EAAEK,SACtClG,KAAKqE,aACF,CAEH,MAAMxD,EAAcb,KAAKqG,WAAWtF,EAAGC,GACnCH,IAAgBb,KAAKa,cACrBb,KAAKa,YAAcA,EACnBb,KAAK8B,OAAOG,MAAME,OAAStB,EAAc,UAAY,UAEjDA,GACAb,KAAKwD,UAAUT,YAAc,GAAGlC,EAAYyF,OAASzF,EAAY6E,OAAO7E,EAAY6E,MACpF1F,KAAKwD,UAAUvB,MAAMG,QAAU,SAE/BpC,KAAKwD,UAAUvB,MAAMG,QAAU,OAGnCpC,KAAKqE,SACLrE,KAAK4E,QAAQ,YAAa/D,EAAcA,EAAY6E,GAAK,MAEjE,CACJ,CAEA,SAAA5B,GACI9D,KAAKkB,YAAa,EAClBlB,KAAKoB,WAAY,EACjBpB,KAAKmB,SAAW,KAChBnB,KAAK8B,OAAOG,MAAME,OAAS,SAC/B,CAEA,OAAA4B,CAAQ8B,GACJ,IAAK7F,KAAKkB,WAAY,CAClB,MAAM4E,EAAO9F,KAAK8B,OAAOiE,wBACnBhF,GAAK8E,EAAEG,QAAUF,EAAKG,KAAOjG,KAAKc,OAAOC,GAAKf,KAAKc,OAAOG,KAC1DD,GAAK6E,EAAEK,QAAUJ,EAAKK,IAAMnG,KAAKc,OAAOE,GAAKhB,KAAKc,OAAOG,KAEzDmF,EAAcpG,KAAKqG,WAAWtF,EAAGC,GACnCoF,GAEIP,EAAEU,SAAWV,EAAEW,QAEXxG,KAAKY,cAAc6F,SAASL,EAAYV,IACxC1F,KAAKY,cAAgBZ,KAAKY,cAAc8F,OAAOhB,GAAMA,IAAOU,EAAYV,IAExE1F,KAAKY,cAAc+F,KAAKP,EAAYV,IAIxC1F,KAAKY,cAAgB,CAACwF,EAAYV,IAGtC1F,KAAKqE,SACLrE,KAAK4E,QAAQ,YAAa,CAAES,OAAQe,EAAYV,GAAIkB,SAAUR,IAC9DpG,KAAK4E,QAAQ,kBAAmB5E,KAAKY,gBAGhCiF,EAAEU,SAAYV,EAAEW,UACjBxG,KAAKY,cAAgB,GACrBZ,KAAKqE,SACLrE,KAAK4E,QAAQ,kBAAmB5E,KAAKY,eAGjD,CACJ,CAEA,aAAAoD,CAAc6B,GACV,MAAMC,EAAO9F,KAAK8B,OAAOiE,wBACnBhF,GAAK8E,EAAEG,QAAUF,EAAKG,KAAOjG,KAAKc,OAAOC,GAAKf,KAAKc,OAAOG,KAC1DD,GAAK6E,EAAEK,QAAUJ,EAAKK,IAAMnG,KAAKc,OAAOE,GAAKhB,KAAKc,OAAOG,KAEzDmF,EAAcpG,KAAKqG,WAAWtF,EAAGC,GACnCoF,IACApG,KAAK4E,QAAQ,kBAAmB,CAAES,OAAQe,EAAYV,GAAIkB,SAAUR,IACpEpG,KAAKoF,YAAYgB,EAAYV,GAAI,GAEzC,CAEA,OAAAzB,CAAQ4B,GACJ,GAAI7F,KAAKD,OAAOQ,WAAY,CACxBsF,EAAEgB,iBACF,MAAMf,EAAO9F,KAAK8B,OAAOiE,wBACnBe,EAASjB,EAAEG,QAAUF,EAAKG,KAC1Bc,EAASlB,EAAEK,QAAUJ,EAAKK,IAE1Ba,EAAanB,EAAEoB,OAAS,EAAI,GAAM,IAClCC,EAAUC,KAAKC,IAAI,GAAKD,KAAKE,IAAI,EAAKrH,KAAKc,OAAOG,KAAO+F,IAG/DhH,KAAKc,OAAOC,EAAI+F,GAAUA,EAAS9G,KAAKc,OAAOC,IAAMmG,EAAUlH,KAAKc,OAAOG,MAC3EjB,KAAKc,OAAOE,EAAI+F,GAAUA,EAAS/G,KAAKc,OAAOE,IAAMkG,EAAUlH,KAAKc,OAAOG,MAC3EjB,KAAKc,OAAOG,KAAOiG,EAEnBlH,KAAKqE,SACLrE,KAAK4E,QAAQ,eAAgB5E,KAAKc,OACtC,CACJ,CAEA,YAAAoD,GACIlE,KAAKa,YAAc,KACnBb,KAAKwD,UAAUvB,MAAMG,QAAU,OAC/BpC,KAAKqE,QACT,CAGA,UAAAgC,CAAWtF,EAAGC,GACV,OAAOhB,KAAKS,MAAM+E,KAAKD,IACnB,MAAMI,EAAM3F,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOH,EAAKG,IACnD,GAAIC,EAAK,CACL,MAAM2B,EAAS/B,EAAKgC,MAAQ,EACtBC,EAAKzG,EAAI4E,EAAI5E,EACb0G,EAAKzG,EAAI2E,EAAI3E,EACnB,OAAQwG,EAAKA,EAAKC,EAAKA,GAAQH,EAASA,CAC5C,CACA,OAAO,GAEf,CAEA,YAAArE,GACI,MAAMyE,EAAU,CAAC,WAAY,OAAQ,kBAC/BC,EAAeD,EAAQE,QAAQ5H,KAAKD,OAAOI,QAC3C0H,EAAaH,GAASC,EAAe,GAAKD,EAAQpD,QACxDtE,KAAKuE,UAAUsD,GAAY,EAC/B,CAEA,WAAAvE,GACI,MAAMwE,EAAS,CAAC,QAAS,QACnBH,EAAeG,EAAOF,QAAQ5H,KAAKD,OAAOK,OAC1C2H,EAAYD,GAAQH,EAAe,GAAKG,EAAOxD,QACrDtE,KAAK+E,SAASgD,EAClB,CAGA,eAAA3D,GACI,MAAM,MAAEnE,EAAK,OAAEC,EAAM,OAAEC,GAAWH,KAAKD,OACjCiI,EAAU,GAGhB,GAFAhI,KAAKW,UAAY,GAEF,aAAXR,GAAyBH,KAAKS,MAAM6D,OAAS,EAAG,CAChD,MAAM2D,EAAUhI,EAAQ,EAClBiI,EAAUhI,EAAS,EACnBoH,EAASH,KAAKE,IAAIpH,EAAOC,GAAU,EAAI8H,EAE7ChI,KAAKS,MAAM0H,QAAQ,CAAC5C,EAAM6C,KACtB,MAAMC,EAAa,EAAJD,EAAQjB,KAAKmB,GAAMtI,KAAKS,MAAM6D,OAC7CtE,KAAKW,UAAUgG,KAAK,CAChBjB,GAAIH,EAAKG,GACT3E,EAAGkH,EAAUX,EAASH,KAAKoB,IAAIF,GAC/BrH,EAAGkH,EAAUZ,EAASH,KAAKqB,IAAIH,MAG3C,MAAO,GAAe,mBAAXlI,EAA6B,CAEpCH,KAAKW,UAAYX,KAAKS,MAAMgI,IAAIlD,IAAQ,CACpCG,GAAIH,EAAKG,GACT3E,EAAGiH,EAAUb,KAAKuB,UAAYzI,EAAQ,KACtCe,EAAGgH,EAAUb,KAAKuB,UAAYxI,EAAS,QAI3C,IAAK,IAAIyI,EAAO,EAAGA,EAAO,GAAIA,IAAQ,CAElC,IAAK,IAAIP,EAAI,EAAGA,EAAIpI,KAAKW,UAAU2D,OAAQ8D,IACvC,IAAK,IAAIQ,EAAIR,EAAI,EAAGQ,EAAI5I,KAAKW,UAAU2D,OAAQsE,IAAK,CAChD,MAAMpB,EAAKxH,KAAKW,UAAUiI,GAAG7H,EAAIf,KAAKW,UAAUyH,GAAGrH,EAC7C0G,EAAKzH,KAAKW,UAAUiI,GAAG5H,EAAIhB,KAAKW,UAAUyH,GAAGpH,EAC7C6H,EAAW1B,KAAK2B,KAAKtB,EAAKA,EAAKC,EAAKA,IAAO,EAC3CsB,EAAQ,KAAOF,EAAWA,GAEhC7I,KAAKW,UAAUyH,GAAGrH,GAAKgI,EAAQvB,EAAKqB,EACpC7I,KAAKW,UAAUyH,GAAGpH,GAAK+H,EAAQtB,EAAKoB,EACpC7I,KAAKW,UAAUiI,GAAG7H,GAAKgI,EAAQvB,EAAKqB,EACpC7I,KAAKW,UAAUiI,GAAG5H,GAAK+H,EAAQtB,EAAKoB,CACxC,CAIJ7I,KAAKU,MAAMyH,QAAQa,IACf,MAAMC,EAAMjJ,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOsD,EAAKE,QAC7CC,EAAMnJ,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOsD,EAAKI,QACnD,GAAIH,GAAOE,EAAK,CACZ,MAAM3B,EAAK2B,EAAIpI,EAAIkI,EAAIlI,EACjB0G,EAAK0B,EAAInI,EAAIiI,EAAIjI,EACjB6H,EAAW1B,KAAK2B,KAAKtB,EAAKA,EAAKC,EAAKA,IAAO,EAC3CsB,EAAmB,IAAXF,EAEdI,EAAIlI,GAAKgI,EAAQvB,EAAKqB,EACtBI,EAAIjI,GAAK+H,EAAQtB,EAAKoB,EACtBM,EAAIpI,GAAKgI,EAAQvB,EAAKqB,EACtBM,EAAInI,GAAK+H,EAAQtB,EAAKoB,CAC1B,IAIJ7I,KAAKW,UAAUwH,QAAQxC,IACnBA,EAAI5E,EAAIoG,KAAKC,IAAIY,EAASb,KAAKE,IAAIpH,EAAQ+H,EAASrC,EAAI5E,IACxD4E,EAAI3E,EAAImG,KAAKC,IAAIY,EAASb,KAAKE,IAAInH,EAAS8H,EAASrC,EAAI3E,KAEjE,CACJ,KAAO,CAEH,MAAMqI,EAAOlC,KAAKmC,KAAKnC,KAAK2B,KAAK9I,KAAKS,MAAM6D,SACtCiF,GAAStJ,EAAQ,KAAeoJ,EAChCG,GAAStJ,EAAS,KAAeiH,KAAKmC,KAAKtJ,KAAKS,MAAM6D,OAAS+E,GAErErJ,KAAKS,MAAM0H,QAAQ,CAAC5C,EAAM6C,KACtBpI,KAAKW,UAAUgG,KAAK,CAChBjB,GAAIH,EAAKG,GACT3E,EAAGiH,EAAWI,EAAIiB,EAAQE,EAAQA,EAAQ,EAC1CvI,EAAGgH,EAAUb,KAAKsC,MAAMrB,EAAIiB,GAAQG,EAAQA,EAAQ,KAGhE,CACJ,CAEA,mBAAA7E,GACI,MAAM+E,EAAe,IAAI1J,KAAKW,WAC9BX,KAAKoE,kBACL,MAAMuF,EAAe,IAAI3J,KAAKW,WAGxBiJ,EAAYC,KAAKC,MACjBC,EAAW/J,KAAKD,OAAOS,kBAEvBiE,EAAU,KACZ,MAAMuF,EAAW7C,KAAKE,IAAI,GAAIwC,KAAKC,MAAQF,GAAaG,GAExD/J,KAAKW,UAAY+I,EAAajB,IAAI,CAACwB,EAAQ7B,KACvC,MAAM8B,EAASP,EAAavB,GAC5B,MAAO,CACH1C,GAAIuE,EAAOvE,GACX3E,EAAGkJ,EAAOlJ,GAAKmJ,EAAOnJ,EAAIkJ,EAAOlJ,GAAKiJ,EACtChJ,EAAGiJ,EAAOjJ,GAAKkJ,EAAOlJ,EAAIiJ,EAAOjJ,GAAKgJ,KAI9ChK,KAAKqE,SAED2F,EAAW,GACXG,sBAAsB1F,IAI9BA,GACJ,CAGA,MAAAJ,GACIrE,KAAKqC,IAAI+H,UAAU,EAAG,EAAGpK,KAAK8B,OAAO7B,MAAOD,KAAK8B,OAAO5B,QAExDF,KAAKqC,IAAIgI,OACTrK,KAAKqC,IAAIiI,UAAUtK,KAAKc,OAAOC,EAAGf,KAAKc,OAAOE,GAC9ChB,KAAKqC,IAAIkI,MAAMvK,KAAKc,OAAOG,KAAMjB,KAAKc,OAAOG,MAE7CjB,KAAKwK,YACLxK,KAAKyK,YAELzK,KAAKqC,IAAIqI,UAGT1K,KAAK2K,WACT,CAEA,SAAAH,GACI,MAAM,MAAEpK,GAAUJ,KAAKD,OAEvBC,KAAKU,MAAMyH,QAAQa,IACf,MAAMC,EAAMjJ,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOsD,EAAKE,QAC7CC,EAAMnJ,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOsD,EAAKI,QAC/CH,GAAOE,IACPnJ,KAAKqC,IAAIuI,YAAwB,SAAVxK,EAAmB,OAAS,OACnDJ,KAAKqC,IAAIwI,UAAY,EACrB7K,KAAKqC,IAAIyI,YACT9K,KAAKqC,IAAI0I,OAAO9B,EAAIlI,EAAGkI,EAAIjI,GAC3BhB,KAAKqC,IAAI2I,OAAO7B,EAAIpI,EAAGoI,EAAInI,GAC3BhB,KAAKqC,IAAI4I,WAGrB,CAEA,SAAAR,GACI,MAAM,MAAErK,GAAUJ,KAAKD,OAEvBC,KAAKS,MAAM0H,QAAQ5C,IACf,MAAMI,EAAM3F,KAAKW,UAAU6E,KAAKI,GAAKA,EAAEF,KAAOH,EAAKG,IACnD,GAAIC,EAAK,CACL,MAAMuF,EAAalL,KAAKY,cAAc6F,SAASlB,EAAKG,IAC9CyF,EAAYnL,KAAKa,aAAeb,KAAKa,YAAY6E,KAAOH,EAAKG,GAC7D4B,GAAU/B,EAAKgC,MAAQ,IAAM4D,EAAY,IAAM,GAGjDA,IACAnL,KAAKqC,IAAI+I,YAAc,kBACvBpL,KAAKqC,IAAIgJ,WAAa,GACtBrL,KAAKqC,IAAIiJ,cAAgB,EACzBtL,KAAKqC,IAAIkJ,cAAgB,GAI7BvL,KAAKqC,IAAImJ,UAAYjG,EAAKkG,QAAoB,SAAVrL,EAAmB,UAAY,WACnEJ,KAAKqC,IAAIyI,YACT9K,KAAKqC,IAAIqJ,IAAI/F,EAAI5E,EAAG4E,EAAI3E,EAAGsG,EAAQ,EAAG,EAAIH,KAAKmB,IAC/CtI,KAAKqC,IAAIsJ,OAET3L,KAAKqC,IAAI+I,YAAc,cACvBpL,KAAKqC,IAAIgJ,WAAa,GAGlBH,GAAcC,KACdnL,KAAKqC,IAAIuI,YAAcM,EAAa,UAAY,UAChDlL,KAAKqC,IAAIwI,UAAY,EACrB7K,KAAKqC,IAAI4I,UAIbjL,KAAKqC,IAAImJ,UAAsB,SAAVpL,EAAmB,OAAS,OACjDJ,KAAKqC,IAAIuJ,KAAO,aAChB5L,KAAKqC,IAAIwJ,UAAY,SACrB7L,KAAKqC,IAAIyJ,SAASvG,EAAKe,OAASf,EAAKG,GAAIC,EAAI5E,EAAG4E,EAAI3E,EAAIsG,EAAS,EACrE,GAER,CAEA,SAAAqD,GACI,MAAMoB,EAAQ,GAAG/L,KAAKS,MAAM6D,kBAAkBtE,KAAKU,MAAM4D,kBAAkBtE,KAAKD,OAAOI,kBAAkBH,KAAKc,OAAOG,KAAK+K,QAAQ,MAClIhM,KAAKqC,IAAImJ,UAAkC,SAAtBxL,KAAKD,OAAOK,MAAmB,OAAS,OAC7DJ,KAAKqC,IAAIuJ,KAAO,aAChB5L,KAAKqC,IAAIwJ,UAAY,OACrB7L,KAAKqC,IAAIyJ,SAASC,EAAO,GAAI/L,KAAK8B,OAAO5B,OAAS,GACtD,CAGA,EAAA+L,CAAGC,EAAOC,GACDnM,KAAKsB,UAAU4K,KAChBlM,KAAKsB,UAAU4K,GAAS,IAE5BlM,KAAKsB,UAAU4K,GAAOvF,KAAKwF,EAC/B,CAEA,OAAAvH,CAAQsH,EAAOE,GACPpM,KAAKsB,UAAU4K,IACflM,KAAKsB,UAAU4K,GAAO/D,QAAQgE,IAC1B,IACIA,EAASC,EACb,CAAE,MAAOvG,GACLnD,QAAQ2J,MAAM,YAAYH,cAAmBrG,EACjD,GAGZ,G,GCtkBAyG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa9M,QAGrB,IAAID,EAAS4M,EAAyBE,GAAY,CAGjD7M,QAAS,CAAC,GAOX,OAHAgN,EAAoBH,GAAU9M,EAAQA,EAAOC,QAAS4M,GAG/C7M,EAAOC,OACf,CCrBA4M,EAAoBK,EAAI,CAACjN,EAASkN,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEpN,EAASmN,IAC5EE,OAAOC,eAAetN,EAASmN,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBkB,EAAK9N,IACH,oBAAX+N,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAetN,EAAS+N,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAetN,EAAS,aAAc,CAAEiO,OAAO,K,gKCMvD,MAAMC,EAAkB,uBAQjB,MAAMC,EAMT,WAAAjO,CAAYkO,EAAsBC,GAF1B,KAAAC,cAAyC,IAAIC,IAGjDlO,KAAK+N,QAAUA,EACf/N,KAAKgO,MAAQA,EAGbhO,KAAKmO,SAAW,IAAKN,EAAwBE,EAAS/N,KAAKoO,qBAG3DpO,KAAKqO,kBACT,CAMQ,iBAAAD,GACJ,MAAO,CACHnO,MAAOD,KAAKgO,MAAMb,IAAI,UAAY,IAClCjN,OAAQF,KAAKgO,MAAMb,IAAI,WAAa,IACpChN,OAAQH,KAAKgO,MAAMb,IAAI,qBAAuB,iBAC9C/M,MAAOJ,KAAKgO,MAAMb,IAAI,UAAY,QAClC9M,YAA8C,IAAlCL,KAAKgO,MAAMb,IAAI,eAC3B7M,WAA4C,IAAjCN,KAAKgO,MAAMb,IAAI,cAC1B5M,YAA8C,IAAlCP,KAAKgO,MAAMb,IAAI,eAC3B3M,kBAAmBR,KAAKgO,MAAMb,IAAI,uBAAyB,IAEnE,CAOQ,gBAAAkB,GAEJrO,KAAKsO,eAGLtO,KAAKuO,iBACT,CAKQ,YAAAD,GAEJtO,KAAKmO,SAASlC,GAAG,YAAcG,IAC3BpM,KAAKgO,MAAMQ,KAAK,CACZC,KAAM,aACNC,QAAStC,EAAK/G,OACdsJ,UAAWvC,EAAKxF,SAChBnD,SAAU2I,EAAK3I,aAIvBzD,KAAKmO,SAASlC,GAAG,kBAAoBG,IACjCpM,KAAKgO,MAAMQ,KAAK,CACZC,KAAM,oBACNC,QAAStC,EAAK/G,OACdsJ,UAAWvC,EAAKxF,aAIxB5G,KAAKmO,SAASlC,GAAG,YAAc5G,IAC3BrF,KAAKgO,MAAMY,IAAI,eAAgBvJ,GAAU,IACzCrF,KAAKgO,MAAMa,iBAIf7O,KAAKmO,SAASlC,GAAG,kBAAoB6C,IACjC9O,KAAKgO,MAAMY,IAAI,iBAAkBE,GACjC9O,KAAKgO,MAAMa,iBAIf7O,KAAKmO,SAASlC,GAAG,eAAiBG,IAC9BpM,KAAKgO,MAAMY,IAAI,mBAAoBxC,EAAKtH,IACxC9E,KAAKgO,MAAMa,iBAIf,IAAIE,EAAsB,KAC1B/O,KAAKmO,SAASlC,GAAG,eAAiBnL,IAC1BiO,GAAgBC,aAAaD,GACjCA,EAAiBE,WAAW,KACxBjP,KAAKgO,MAAMY,IAAI,kBAAmB9N,GAClCd,KAAKgO,MAAMa,gBACZ,OAIP7O,KAAKmO,SAASlC,GAAG,YAAa,KAC1BjM,KAAKgO,MAAMY,IAAI,eAAe,GAC9B5O,KAAKgO,MAAMa,iBAGf7O,KAAKmO,SAASlC,GAAG,UAAW,KACxBjM,KAAKgO,MAAMY,IAAI,eAAe,GAC9B5O,KAAKgO,MAAMa,gBAEnB,CAKQ,eAAAN,GAEJvO,KAAKgO,MAAM/B,GAAG,4BAA6B,KACvC,MAAMxL,EAAQT,KAAKgO,MAAMb,IAAI,UAAY,GACnCzM,EAAQV,KAAKgO,MAAMb,IAAI,UAAY,GACzCnN,KAAKmO,SAAShK,QAAQ1D,EAAOC,KAIjCV,KAAKgO,MAAM/B,GAAG,0BAA2B,KACrC,MAAM9L,EAASH,KAAKgO,MAAMb,IAAI,oBAC9BnN,KAAKmO,SAAS5J,UAAUpE,GAAQ,KAIpCH,KAAKgO,MAAM/B,GAAG,eAAgB,KAC1B,MAAM7L,EAAQJ,KAAKgO,MAAMb,IAAI,SAC7BnN,KAAKmO,SAASpJ,SAAS3E,KAI3BJ,KAAKgO,MAAM/B,GAAG,wBAAyB,KACnC,MAAMrL,EAAgBZ,KAAKgO,MAAMb,IAAI,mBAAqB,GAC1DnN,KAAKmO,SAASnJ,YAAYpE,GAAe,KAI7CZ,KAAKgO,MAAM/B,GAAG,wBAAyB,KACnC,MAAMtL,EAAYX,KAAKgO,MAAMb,IAAI,mBAAqB,CAAC,EACvDnN,KAAKkP,oBAAoBvO,KAI7BX,KAAKgO,MAAM/B,GAAG,6BAA8B,KACxCjM,KAAKmP,kBAEb,CAKA,mBAAAC,CAAoBC,GAChB,MAAM,KAAEZ,GAASY,EAEjB,OAAQZ,GACJ,IAAK,aACDzO,KAAKmO,SAAS5J,UAAU8K,EAAQ7K,WAA+B,IAApB6K,EAAQ5K,SACnD,MAEJ,IAAK,aACDzE,KAAKmO,SAAS/I,YAAYiK,EAAQX,QAASW,EAAQpO,MAAQ,GAC3D,MAEJ,IAAK,eACDjB,KAAKmO,SAAS/K,cACd,MAEJ,IAAK,mBACDpD,KAAKkP,oBAAoBG,EAAQ1O,WACjC,MAEJ,QACI+B,QAAQ4M,KAAK,yBAAyBb,KAElD,CAKQ,mBAAAS,CAAoBvO,GAExBqM,OAAOuC,QAAQ5O,GAAWwH,QAAQ,EAAE9C,EAAQM,M,SACS,QAA7B,KAAA3F,KAAKmO,UAASqB,uBAAe,sBAAGnK,KACjCM,GAEf3F,KAAKyP,oBAAoBpK,EAAQM,IAG7C,CAKQ,mBAAA8J,CAAoBpK,EAAgBqK,GAEpC1P,KAAKmO,SAASwB,eACd3P,KAAKmO,SAASwB,cAActK,EAAQqK,EAAU3O,EAAG2O,EAAU1O,EAEnE,CAKQ,cAAAmO,GACJ,MAAMlP,EAAQD,KAAKgO,MAAMb,IAAI,SACvBjN,EAASF,KAAKgO,MAAMb,IAAI,UAE1BnN,KAAKmO,SAASyB,QACd5P,KAAKmO,SAASyB,OAAO3P,EAAOC,EAEpC,CAKA,UAAA2P,GACI,MAAMpP,EAAQT,KAAKgO,MAAMb,IAAI,UAAY,GACnCzM,EAAQV,KAAKgO,MAAMb,IAAI,UAAY,GACnCxM,EAAYX,KAAKgO,MAAMb,IAAI,mBAAqB,CAAC,EAGvDnN,KAAKmO,SAAShK,QAAQ1D,EAAOC,GAEzBsM,OAAO8C,KAAKnP,GAAW2D,OAAS,GAChCtE,KAAKkP,oBAAoBvO,GAG7B+B,QAAQC,IAAI,+CAChB,CAKA,OAAAoN,GACQ/P,KAAKmO,SAAS4B,SACd/P,KAAKmO,SAAS4B,SAEtB,EClPG,MAAMC,EAAc,iBACdC,EAAiB,QAKvB,MAAMC,UAAyB,EAAAC,eAClC,QAAAC,GACI,OAAO,OAAP,wBACOC,MAAMD,YAAU,CACnBE,YAAaJ,EAAiBK,WAC9BC,cAAeN,EAAiBO,aAChCC,sBAAuBR,EAAiBS,qBACxCC,WAAYV,EAAiBW,UAC7BC,aAAcZ,EAAiBa,YAC/BC,qBAAsBd,EAAiBe,oBAGvCxQ,MAAO,GACPC,MAAO,GACPwQ,eAAgB,CAAC,EAGjBC,iBAAkB,iBAClB/Q,MAAO,QACPH,MAAO,IACPC,OAAQ,IACRkR,MAAO,sBAGPC,eAAgB,GAChBC,aAAc,GACdC,gBAAiB,CAAExQ,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACrCuQ,aAAa,EAGbC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,mBAAmB,EACnBC,mBAAoB,IAGpBC,aAAc,CAAC,GAEvB,EAEO,EAAAC,YAAW,iBACX,EAAA5B,eAAe4B,aAIf,EAAAxB,WAAa,mBACb,EAAAE,aAAeT,EACf,EAAAW,qBAAuBV,EACvB,EAAAY,UAAY,kBACZ,EAAAE,YAAcf,EACd,EAAAiB,oBAAsBhB,EAM1B,MAAM,UAAwB,EAAA+B,cAArC,c,oBACY,KAAAC,WAAuC,IAiEnD,CA5DI,MAAA5N,GAEIrE,KAAKkS,GAAGC,UAAUC,IAAI,2BACtBpS,KAAKkS,GAAGjQ,MAAMY,QAAU,qLASxB7C,KAAKiS,WAAa,IAAInE,EAAkB9N,KAAKkS,GAAIlS,KAAKgO,OAGtDhO,KAAKgO,MAAM/B,GAAG,aAAcjM,KAAKoP,oBAAqBpP,MAGtDA,KAAKiS,WAAWpC,aAEhBnN,QAAQC,IAAI,mCAChB,CAKQ,mBAAAyM,CAAoBC,GACpBrP,KAAKiS,YACLjS,KAAKiS,WAAW7C,oBAAoBC,EAE5C,CAKA,MAAAgD,GACQrS,KAAKiS,aACLjS,KAAKiS,WAAWlC,UAChB/P,KAAKiS,WAAa,MAGtB5B,MAAMgC,QACV,CAKA,QAAAC,GAEI,GAAItS,KAAKiS,WAAY,CACjB,MAAMhS,EAAQD,KAAKkS,GAAGK,YAChBrS,EAASF,KAAKkS,GAAGM,aAEnBvS,EAAQ,GAAKC,EAAS,IACtBF,KAAKgO,MAAMY,IAAI,QAAS3O,GACxBD,KAAKgO,MAAMY,IAAI,SAAU1O,GACzBF,KAAKgO,MAAMa,e,CAGvB,ECpIG,MAAM4D,EAAU,O","sources":["webpack://groggy-widget/external amd \"@jupyter-widgets/base\"","webpack://groggy-widget/../python/groggy/widgets/widget_view.js","webpack://groggy-widget/webpack/bootstrap","webpack://groggy-widget/webpack/runtime/define property getters","webpack://groggy-widget/webpack/runtime/hasOwnProperty shorthand","webpack://groggy-widget/webpack/runtime/make namespace object","webpack://groggy-widget/./src/core.ts","webpack://groggy-widget/./src/widget.ts","webpack://groggy-widget/./src/index.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__55__;","/**\n * GroggyGraphView - JavaScript Implementation for Widget\n * \n * This is a simplified JavaScript view that can be embedded in HTML\n * for testing the widget functionality. In a full Jupyter widget,\n * this would be built as a proper npm package with webpack.\n */\n\nclass GroggyGraphView {\n    constructor(container, config = {}) {\n        this.container = container;\n        this.config = {\n            width: 800,\n            height: 600,\n            layout: 'force-directed',\n            theme: 'light',\n            enableDrag: true,\n            enablePan: true,\n            enableZoom: true,\n            animationDuration: 300,\n            ...config\n        };\n        \n        // State\n        this.nodes = [];\n        this.edges = [];\n        this.positions = [];\n        this.selectedNodes = [];\n        this.hoveredNode = null;\n        this.camera = { x: 0, y: 0, zoom: 1.0 };\n        \n        // Interaction state\n        this.isDragging = false;\n        this.dragNode = null;\n        this.isPanning = false;\n        this.lastMouse = { x: 0, y: 0 };\n        \n        // Callbacks for Python communication\n        this.callbacks = {\n            nodeClick: [],\n            nodeHover: [],\n            nodeDoubleClick: [],\n            layoutChange: [],\n            cameraChange: [],\n            selectionChange: []\n        };\n        \n        this.init();\n    }\n    \n    init() {\n        // Create canvas\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = this.config.width;\n        this.canvas.height = this.config.height;\n        this.canvas.style.border = '1px solid #ddd';\n        this.canvas.style.cursor = 'default';\n        this.canvas.style.display = 'block';\n        \n        this.ctx = this.canvas.getContext('2d');\n        this.container.appendChild(this.canvas);\n        \n        // Create controls\n        this.createControls();\n        \n        // Set up event listeners\n        this.setupEventListeners();\n        \n        console.log('GroggyGraphView initialized');\n    }\n    \n    createControls() {\n        const controlsDiv = document.createElement('div');\n        controlsDiv.style.cssText = `\n            margin: 10px 0;\n            text-align: center;\n        `;\n        \n        // Layout button\n        const layoutBtn = document.createElement('button');\n        layoutBtn.textContent = 'Toggle Layout';\n        layoutBtn.style.cssText = `\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 8px 16px;\n            margin: 4px;\n            border-radius: 4px;\n            cursor: pointer;\n        `;\n        layoutBtn.onclick = () => this.toggleLayout();\n        \n        // Reset button\n        const resetBtn = document.createElement('button');\n        resetBtn.textContent = 'Reset View';\n        resetBtn.style.cssText = layoutBtn.style.cssText.replace('#007bff', '#28a745');\n        resetBtn.onclick = () => this.resetCamera();\n        \n        // Theme button\n        const themeBtn = document.createElement('button');\n        themeBtn.textContent = 'Toggle Theme';\n        themeBtn.style.cssText = layoutBtn.style.cssText.replace('#007bff', '#6c757d');\n        themeBtn.onclick = () => this.toggleTheme();\n        \n        controlsDiv.appendChild(layoutBtn);\n        controlsDiv.appendChild(resetBtn);\n        controlsDiv.appendChild(themeBtn);\n        \n        this.container.insertBefore(controlsDiv, this.canvas);\n        \n        // Info panel\n        this.infoPanel = document.createElement('div');\n        this.infoPanel.style.cssText = `\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            display: none;\n        `;\n        this.container.style.position = 'relative';\n        this.container.appendChild(this.infoPanel);\n    }\n    \n    setupEventListeners() {\n        // Mouse events\n        this.canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\n        this.canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\n        this.canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\n        this.canvas.addEventListener('click', this.onClick.bind(this));\n        this.canvas.addEventListener('dblclick', this.onDoubleClick.bind(this));\n        this.canvas.addEventListener('wheel', this.onWheel.bind(this));\n        this.canvas.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n    \n    // Public API\n    setData(nodes, edges) {\n        this.nodes = nodes || [];\n        this.edges = edges || [];\n        this.calculateLayout();\n        this.render();\n        console.log(`Data updated: ${this.nodes.length} nodes, ${this.edges.length} edges`);\n    }\n    \n    setLayout(algorithm, animate = true) {\n        const oldLayout = this.config.layout;\n        this.config.layout = algorithm;\n        \n        if (animate) {\n            this.animateLayoutChange();\n        } else {\n            this.calculateLayout();\n            this.render();\n        }\n        \n        this.trigger('layoutChange', { from: oldLayout, to: algorithm });\n        console.log(`Layout changed to: ${algorithm}`);\n    }\n    \n    setTheme(theme) {\n        this.config.theme = theme;\n        this.render();\n        console.log(`Theme changed to: ${theme}`);\n    }\n    \n    selectNodes(nodeIds, clearExisting = true) {\n        if (clearExisting) {\n            this.selectedNodes = [...nodeIds];\n        } else {\n            this.selectedNodes = [...new Set([...this.selectedNodes, ...nodeIds])];\n        }\n        this.render();\n        this.trigger('selectionChange', this.selectedNodes);\n    }\n    \n    focusOnNode(nodeId, zoomLevel = 2.0) {\n        const node = this.nodes.find(n => n.id === nodeId);\n        const pos = this.positions.find(p => p.id === nodeId);\n        \n        if (node && pos) {\n            // Center camera on node\n            this.camera.x = this.config.width / 2 - pos.x * this.camera.zoom;\n            this.camera.y = this.config.height / 2 - pos.y * this.camera.zoom;\n            this.camera.zoom = zoomLevel;\n            \n            this.render();\n            this.trigger('cameraChange', this.camera);\n        }\n    }\n    \n    resetCamera() {\n        this.camera = { x: 0, y: 0, zoom: 1.0 };\n        this.calculateLayout();\n        this.render();\n        this.trigger('cameraChange', this.camera);\n    }\n    \n    // Event handling\n    onMouseDown(e) {\n        const rect = this.canvas.getBoundingClientRect();\n        const x = (e.clientX - rect.left - this.camera.x) / this.camera.zoom;\n        const y = (e.clientY - rect.top - this.camera.y) / this.camera.zoom;\n        \n        const clickedNode = this.findNodeAt(x, y);\n        \n        if (clickedNode && this.config.enableDrag) {\n            this.isDragging = true;\n            this.dragNode = clickedNode;\n            this.canvas.style.cursor = 'grabbing';\n        } else if (this.config.enablePan) {\n            this.isPanning = true;\n            this.lastMouse = { x: e.clientX, y: e.clientY };\n            this.canvas.style.cursor = 'grabbing';\n        }\n    }\n    \n    onMouseMove(e) {\n        const rect = this.canvas.getBoundingClientRect();\n        const x = (e.clientX - rect.left - this.camera.x) / this.camera.zoom;\n        const y = (e.clientY - rect.top - this.camera.y) / this.camera.zoom;\n        \n        if (this.isDragging && this.dragNode) {\n            // Update node position\n            const pos = this.positions.find(p => p.id === this.dragNode.id);\n            if (pos) {\n                pos.x = x;\n                pos.y = y;\n                this.render();\n            }\n        } else if (this.isPanning) {\n            // Update camera position\n            this.camera.x += e.clientX - this.lastMouse.x;\n            this.camera.y += e.clientY - this.lastMouse.y;\n            this.lastMouse = { x: e.clientX, y: e.clientY };\n            this.render();\n        } else {\n            // Hover detection\n            const hoveredNode = this.findNodeAt(x, y);\n            if (hoveredNode !== this.hoveredNode) {\n                this.hoveredNode = hoveredNode;\n                this.canvas.style.cursor = hoveredNode ? 'pointer' : 'default';\n                \n                if (hoveredNode) {\n                    this.infoPanel.textContent = `${hoveredNode.label || hoveredNode.id} (${hoveredNode.id})`;\n                    this.infoPanel.style.display = 'block';\n                } else {\n                    this.infoPanel.style.display = 'none';\n                }\n                \n                this.render();\n                this.trigger('nodeHover', hoveredNode ? hoveredNode.id : null);\n            }\n        }\n    }\n    \n    onMouseUp() {\n        this.isDragging = false;\n        this.isPanning = false;\n        this.dragNode = null;\n        this.canvas.style.cursor = 'default';\n    }\n    \n    onClick(e) {\n        if (!this.isDragging) {\n            const rect = this.canvas.getBoundingClientRect();\n            const x = (e.clientX - rect.left - this.camera.x) / this.camera.zoom;\n            const y = (e.clientY - rect.top - this.camera.y) / this.camera.zoom;\n            \n            const clickedNode = this.findNodeAt(x, y);\n            if (clickedNode) {\n                // Handle selection\n                if (e.ctrlKey || e.metaKey) {\n                    // Add to selection\n                    if (this.selectedNodes.includes(clickedNode.id)) {\n                        this.selectedNodes = this.selectedNodes.filter(id => id !== clickedNode.id);\n                    } else {\n                        this.selectedNodes.push(clickedNode.id);\n                    }\n                } else {\n                    // Replace selection\n                    this.selectedNodes = [clickedNode.id];\n                }\n                \n                this.render();\n                this.trigger('nodeClick', { nodeId: clickedNode.id, nodeData: clickedNode });\n                this.trigger('selectionChange', this.selectedNodes);\n            } else {\n                // Clear selection\n                if (!e.ctrlKey && !e.metaKey) {\n                    this.selectedNodes = [];\n                    this.render();\n                    this.trigger('selectionChange', this.selectedNodes);\n                }\n            }\n        }\n    }\n    \n    onDoubleClick(e) {\n        const rect = this.canvas.getBoundingClientRect();\n        const x = (e.clientX - rect.left - this.camera.x) / this.camera.zoom;\n        const y = (e.clientY - rect.top - this.camera.y) / this.camera.zoom;\n        \n        const clickedNode = this.findNodeAt(x, y);\n        if (clickedNode) {\n            this.trigger('nodeDoubleClick', { nodeId: clickedNode.id, nodeData: clickedNode });\n            this.focusOnNode(clickedNode.id, 2.0);\n        }\n    }\n    \n    onWheel(e) {\n        if (this.config.enableZoom) {\n            e.preventDefault();\n            const rect = this.canvas.getBoundingClientRect();\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            \n            const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n            const newZoom = Math.max(0.1, Math.min(5.0, this.camera.zoom * zoomFactor));\n            \n            // Zoom toward mouse position\n            this.camera.x = mouseX - (mouseX - this.camera.x) * (newZoom / this.camera.zoom);\n            this.camera.y = mouseY - (mouseY - this.camera.y) * (newZoom / this.camera.zoom);\n            this.camera.zoom = newZoom;\n            \n            this.render();\n            this.trigger('cameraChange', this.camera);\n        }\n    }\n    \n    onMouseLeave() {\n        this.hoveredNode = null;\n        this.infoPanel.style.display = 'none';\n        this.render();\n    }\n    \n    // Utility methods\n    findNodeAt(x, y) {\n        return this.nodes.find(node => {\n            const pos = this.positions.find(p => p.id === node.id);\n            if (pos) {\n                const radius = node.size || 8;\n                const dx = x - pos.x;\n                const dy = y - pos.y;\n                return (dx * dx + dy * dy) <= (radius * radius);\n            }\n            return false;\n        });\n    }\n    \n    toggleLayout() {\n        const layouts = ['circular', 'grid', 'force-directed'];\n        const currentIndex = layouts.indexOf(this.config.layout);\n        const nextLayout = layouts[(currentIndex + 1) % layouts.length];\n        this.setLayout(nextLayout, true);\n    }\n    \n    toggleTheme() {\n        const themes = ['light', 'dark'];\n        const currentIndex = themes.indexOf(this.config.theme);\n        const nextTheme = themes[(currentIndex + 1) % themes.length];\n        this.setTheme(nextTheme);\n    }\n    \n    // Layout algorithms\n    calculateLayout() {\n        const { width, height, layout } = this.config;\n        const padding = 50;\n        this.positions = [];\n        \n        if (layout === 'circular' && this.nodes.length > 0) {\n            const centerX = width / 2;\n            const centerY = height / 2;\n            const radius = Math.min(width, height) / 2 - padding;\n            \n            this.nodes.forEach((node, i) => {\n                const angle = (i * 2 * Math.PI) / this.nodes.length;\n                this.positions.push({\n                    id: node.id,\n                    x: centerX + radius * Math.cos(angle),\n                    y: centerY + radius * Math.sin(angle)\n                });\n            });\n        } else if (layout === 'force-directed') {\n            // Initialize random positions\n            this.positions = this.nodes.map(node => ({\n                id: node.id,\n                x: padding + Math.random() * (width - 2 * padding),\n                y: padding + Math.random() * (height - 2 * padding)\n            }));\n            \n            // Force simulation\n            for (let iter = 0; iter < 50; iter++) {\n                // Repulsion\n                for (let i = 0; i < this.positions.length; i++) {\n                    for (let j = i + 1; j < this.positions.length; j++) {\n                        const dx = this.positions[j].x - this.positions[i].x;\n                        const dy = this.positions[j].y - this.positions[i].y;\n                        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n                        const force = 500 / (distance * distance);\n                        \n                        this.positions[i].x -= force * dx / distance;\n                        this.positions[i].y -= force * dy / distance;\n                        this.positions[j].x += force * dx / distance;\n                        this.positions[j].y += force * dy / distance;\n                    }\n                }\n                \n                // Attraction for edges\n                this.edges.forEach(edge => {\n                    const src = this.positions.find(p => p.id === edge.source);\n                    const dst = this.positions.find(p => p.id === edge.target);\n                    if (src && dst) {\n                        const dx = dst.x - src.x;\n                        const dy = dst.y - src.y;\n                        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n                        const force = distance * 0.01;\n                        \n                        src.x += force * dx / distance;\n                        src.y += force * dy / distance;\n                        dst.x -= force * dx / distance;\n                        dst.y -= force * dy / distance;\n                    }\n                });\n                \n                // Keep in bounds\n                this.positions.forEach(pos => {\n                    pos.x = Math.max(padding, Math.min(width - padding, pos.x));\n                    pos.y = Math.max(padding, Math.min(height - padding, pos.y));\n                });\n            }\n        } else {\n            // Grid layout\n            const cols = Math.ceil(Math.sqrt(this.nodes.length));\n            const cellW = (width - 2 * padding) / cols;\n            const cellH = (height - 2 * padding) / Math.ceil(this.nodes.length / cols);\n            \n            this.nodes.forEach((node, i) => {\n                this.positions.push({\n                    id: node.id,\n                    x: padding + (i % cols) * cellW + cellW / 2,\n                    y: padding + Math.floor(i / cols) * cellH + cellH / 2\n                });\n            });\n        }\n    }\n    \n    animateLayoutChange() {\n        const oldPositions = [...this.positions];\n        this.calculateLayout();\n        const newPositions = [...this.positions];\n        \n        // Simple animation (could be enhanced with proper easing)\n        const startTime = Date.now();\n        const duration = this.config.animationDuration;\n        \n        const animate = () => {\n            const progress = Math.min(1, (Date.now() - startTime) / duration);\n            \n            this.positions = oldPositions.map((oldPos, i) => {\n                const newPos = newPositions[i];\n                return {\n                    id: oldPos.id,\n                    x: oldPos.x + (newPos.x - oldPos.x) * progress,\n                    y: oldPos.y + (newPos.y - oldPos.y) * progress\n                };\n            });\n            \n            this.render();\n            \n            if (progress < 1) {\n                requestAnimationFrame(animate);\n            }\n        };\n        \n        animate();\n    }\n    \n    // Rendering\n    render() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        \n        this.ctx.save();\n        this.ctx.translate(this.camera.x, this.camera.y);\n        this.ctx.scale(this.camera.zoom, this.camera.zoom);\n        \n        this.drawEdges();\n        this.drawNodes();\n        \n        this.ctx.restore();\n        \n        // Draw UI elements (not affected by camera)\n        this.drawStats();\n    }\n    \n    drawEdges() {\n        const { theme } = this.config;\n        \n        this.edges.forEach(edge => {\n            const src = this.positions.find(p => p.id === edge.source);\n            const dst = this.positions.find(p => p.id === edge.target);\n            if (src && dst) {\n                this.ctx.strokeStyle = theme === 'dark' ? '#666' : '#999';\n                this.ctx.lineWidth = 1;\n                this.ctx.beginPath();\n                this.ctx.moveTo(src.x, src.y);\n                this.ctx.lineTo(dst.x, dst.y);\n                this.ctx.stroke();\n            }\n        });\n    }\n    \n    drawNodes() {\n        const { theme } = this.config;\n        \n        this.nodes.forEach(node => {\n            const pos = this.positions.find(p => p.id === node.id);\n            if (pos) {\n                const isSelected = this.selectedNodes.includes(node.id);\n                const isHovered = this.hoveredNode && this.hoveredNode.id === node.id;\n                const radius = (node.size || 8) * (isHovered ? 1.3 : 1);\n                \n                // Shadow for hover\n                if (isHovered) {\n                    this.ctx.shadowColor = 'rgba(0,0,0,0.3)';\n                    this.ctx.shadowBlur = 10;\n                    this.ctx.shadowOffsetX = 2;\n                    this.ctx.shadowOffsetY = 2;\n                }\n                \n                // Node circle\n                this.ctx.fillStyle = node.color || (theme === 'dark' ? '#4CAF50' : '#007bff');\n                this.ctx.beginPath();\n                this.ctx.arc(pos.x, pos.y, radius, 0, 2 * Math.PI);\n                this.ctx.fill();\n                \n                this.ctx.shadowColor = 'transparent';\n                this.ctx.shadowBlur = 0;\n                \n                // Border\n                if (isSelected || isHovered) {\n                    this.ctx.strokeStyle = isSelected ? '#ff0000' : '#ffa500';\n                    this.ctx.lineWidth = 3;\n                    this.ctx.stroke();\n                }\n                \n                // Label\n                this.ctx.fillStyle = theme === 'dark' ? '#fff' : '#000';\n                this.ctx.font = '12px Arial';\n                this.ctx.textAlign = 'center';\n                this.ctx.fillText(node.label || node.id, pos.x, pos.y - radius - 5);\n            }\n        });\n    }\n    \n    drawStats() {\n        const stats = `${this.nodes.length} nodes | ${this.edges.length} edges | ${this.config.layout} | zoom: ${this.camera.zoom.toFixed(1)}x`;\n        this.ctx.fillStyle = this.config.theme === 'dark' ? '#fff' : '#666';\n        this.ctx.font = '12px Arial';\n        this.ctx.textAlign = 'left';\n        this.ctx.fillText(stats, 10, this.canvas.height - 10);\n    }\n    \n    // Event system\n    on(event, callback) {\n        if (!this.callbacks[event]) {\n            this.callbacks[event] = [];\n        }\n        this.callbacks[event].push(callback);\n    }\n    \n    trigger(event, data) {\n        if (this.callbacks[event]) {\n            this.callbacks[event].forEach(callback => {\n                try {\n                    callback(data);\n                } catch (e) {\n                    console.error(`Error in ${event} callback:`, e);\n                }\n            });\n        }\n    }\n}\n\n// Export for module systems\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = GroggyGraphView;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Elegant Core Bridge - Single Source of Truth\n * \n * This module provides the elegant abstraction layer that bridges\n * our existing GroggyGraphView with Jupyter's widget system.\n * \n * Philosophy: Extend, don't duplicate. One codebase, multiple interfaces.\n */\n\n// Elegant import of our core visualization engine\n// Using relative path for maximum elegance and portability\nconst GroggyGraphView = require('../../python/groggy/widgets/widget_view.js').GroggyGraphView;\n\n/**\n * Enhanced GroggyGraphView with Jupyter widget synchronization.\n * \n * This elegant wrapper extends our core visualization engine with\n * bidirectional communication capabilities for Jupyter widgets.\n */\nexport class JupyterGroggyView {\n    private coreView: typeof GroggyGraphView;\n    private model: any;\n    private element: HTMLElement;\n    private syncCallbacks: Map<string, Function[]> = new Map();\n    \n    constructor(element: HTMLElement, model: any) {\n        this.element = element;\n        this.model = model;\n        \n        // Initialize our elegant core engine\n        this.coreView = new (GroggyGraphView as any)(element, this.extractCoreConfig());\n        \n        // Set up elegant bidirectional sync\n        this.setupElegantSync();\n    }\n    \n    /**\n     * Extract core configuration from Jupyter model traits.\n     * Elegant transformation: Jupyter traits → Core config\n     */\n    private extractCoreConfig() {\n        return {\n            width: this.model.get('width') || 800,\n            height: this.model.get('height') || 600,\n            layout: this.model.get('layout_algorithm') || 'force-directed',\n            theme: this.model.get('theme') || 'light',\n            enableDrag: this.model.get('enable_drag') !== false,\n            enablePan: this.model.get('enable_pan') !== false,\n            enableZoom: this.model.get('enable_zoom') !== false,\n            animationDuration: this.model.get('animation_duration') || 300\n        };\n    }\n    \n    /**\n     * Elegant bidirectional synchronization setup.\n     * Core events → Jupyter model updates\n     * Jupyter model changes → Core engine updates\n     */\n    private setupElegantSync() {\n        // Elegant: Core → Jupyter synchronization\n        this.syncFromCore();\n        \n        // Elegant: Jupyter → Core synchronization  \n        this.syncFromJupyter();\n    }\n    \n    /**\n     * Sync core engine events to Jupyter model (Core → Jupyter)\n     */\n    private syncFromCore() {\n        // Node interactions\n        this.coreView.on('nodeClick', (data: any) => {\n            this.model.send({\n                type: 'node_click',\n                node_id: data.nodeId,\n                node_data: data.nodeData,\n                position: data.position\n            });\n        });\n        \n        this.coreView.on('nodeDoubleClick', (data: any) => {\n            this.model.send({\n                type: 'node_double_click', \n                node_id: data.nodeId,\n                node_data: data.nodeData\n            });\n        });\n        \n        this.coreView.on('nodeHover', (nodeId: string | null) => {\n            this.model.set('hovered_node', nodeId || '');\n            this.model.save_changes();\n        });\n        \n        // Selection changes\n        this.coreView.on('selectionChange', (selectedIds: string[]) => {\n            this.model.set('selected_nodes', selectedIds);\n            this.model.save_changes();\n        });\n        \n        // Layout changes\n        this.coreView.on('layoutChange', (data: any) => {\n            this.model.set('layout_algorithm', data.to);\n            this.model.save_changes();\n        });\n        \n        // Camera changes (elegant throttling)\n        let cameraThrottle: any = null;\n        this.coreView.on('cameraChange', (camera: any) => {\n            if (cameraThrottle) clearTimeout(cameraThrottle);\n            cameraThrottle = setTimeout(() => {\n                this.model.set('camera_position', camera);\n                this.model.save_changes();\n            }, 100); // Elegant 100ms throttling\n        });\n        \n        // Drag state\n        this.coreView.on('dragStart', () => {\n            this.model.set('is_dragging', true);\n            this.model.save_changes();\n        });\n        \n        this.coreView.on('dragEnd', () => {\n            this.model.set('is_dragging', false);\n            this.model.save_changes();\n        });\n    }\n    \n    /**\n     * Sync Jupyter model changes to core engine (Jupyter → Core)\n     */\n    private syncFromJupyter() {\n        // Data updates\n        this.model.on('change:nodes change:edges', () => {\n            const nodes = this.model.get('nodes') || [];\n            const edges = this.model.get('edges') || [];\n            this.coreView.setData(nodes, edges);\n        });\n        \n        // Layout changes from Python\n        this.model.on('change:layout_algorithm', () => {\n            const layout = this.model.get('layout_algorithm');\n            this.coreView.setLayout(layout, true);\n        });\n        \n        // Theme changes from Python\n        this.model.on('change:theme', () => {\n            const theme = this.model.get('theme');\n            this.coreView.setTheme(theme);\n        });\n        \n        // Selection changes from Python\n        this.model.on('change:selected_nodes', () => {\n            const selectedNodes = this.model.get('selected_nodes') || [];\n            this.coreView.selectNodes(selectedNodes, true);\n        });\n        \n        // Node positions from Python\n        this.model.on('change:node_positions', () => {\n            const positions = this.model.get('node_positions') || {};\n            this.updateCorePositions(positions);\n        });\n        \n        // Configuration changes\n        this.model.on('change:width change:height', () => {\n            this.updateCoreSize();\n        });\n    }\n    \n    /**\n     * Handle custom messages from Python (elegant command pattern)\n     */\n    handleCustomMessage(content: any) {\n        const { type } = content;\n        \n        switch (type) {\n            case 'set_layout':\n                this.coreView.setLayout(content.algorithm, content.animate !== false);\n                break;\n                \n            case 'focus_node':\n                this.coreView.focusOnNode(content.node_id, content.zoom || 2.0);\n                break;\n                \n            case 'reset_camera':\n                this.coreView.resetCamera();\n                break;\n                \n            case 'update_positions':\n                this.updateCorePositions(content.positions);\n                break;\n                \n            default:\n                console.warn(`Unknown command type: ${type}`);\n        }\n    }\n    \n    /**\n     * Elegant position update with smooth synchronization\n     */\n    private updateCorePositions(positions: Record<string, {x: number, y: number}>) {\n        // Update core engine positions elegantly\n        Object.entries(positions).forEach(([nodeId, pos]) => {\n            const nodeElement = this.coreView.findNodeElement?.(nodeId);\n            if (nodeElement && pos) {\n                // Elegant smooth position update\n                this.animateNodePosition(nodeId, pos);\n            }\n        });\n    }\n    \n    /**\n     * Elegant smooth node position animation\n     */\n    private animateNodePosition(nodeId: string, targetPos: {x: number, y: number}) {\n        // Use core engine's animation system for elegance\n        if (this.coreView.animateNodeTo) {\n            this.coreView.animateNodeTo(nodeId, targetPos.x, targetPos.y);\n        }\n    }\n    \n    /**\n     * Update core engine size elegantly\n     */\n    private updateCoreSize() {\n        const width = this.model.get('width');\n        const height = this.model.get('height');\n        \n        if (this.coreView.resize) {\n            this.coreView.resize(width, height);\n        }\n    }\n    \n    /**\n     * Elegant initialization with data\n     */\n    initialize() {\n        const nodes = this.model.get('nodes') || [];\n        const edges = this.model.get('edges') || [];\n        const positions = this.model.get('node_positions') || {};\n        \n        // Initialize core engine with data\n        this.coreView.setData(nodes, edges);\n        \n        if (Object.keys(positions).length > 0) {\n            this.updateCorePositions(positions);\n        }\n        \n        console.log('🎨 Elegant Jupyter-Groggy bridge initialized');\n    }\n    \n    /**\n     * Elegant cleanup\n     */\n    destroy() {\n        if (this.coreView.destroy) {\n            this.coreView.destroy();\n        }\n    }\n}","/**\n * Elegant Jupyter Widget Implementation\n * \n * Pure, minimal wrapper around our core visualization engine.\n * Philosophy: Thin interface, maximum elegance, zero duplication.\n */\n\nimport {\n    DOMWidgetModel,\n    DOMWidgetView,\n    ISerializers,\n} from '@jupyter-widgets/base';\n\nimport { JupyterGroggyView } from './core';\n\nexport const MODULE_NAME = 'groggy-widgets';\nexport const MODULE_VERSION = '0.1.0';\n\n/**\n * Elegant Graph Model - Pure data synchronization\n */\nexport class GroggyGraphModel extends DOMWidgetModel {\n    defaults() {\n        return {\n            ...super.defaults(),\n            _model_name: GroggyGraphModel.model_name,\n            _model_module: GroggyGraphModel.model_module,\n            _model_module_version: GroggyGraphModel.model_module_version,\n            _view_name: GroggyGraphModel.view_name,\n            _view_module: GroggyGraphModel.view_module,\n            _view_module_version: GroggyGraphModel.view_module_version,\n            \n            // Graph data (elegant sync with Python)\n            nodes: [],\n            edges: [],\n            node_positions: {},\n            \n            // Visualization state (elegant configuration)\n            layout_algorithm: 'force-directed',\n            theme: 'light',\n            width: 800,\n            height: 600,\n            title: 'Graph Visualization',\n            \n            // Interactive state (elegant real-time sync)\n            selected_nodes: [],\n            hovered_node: '',\n            camera_position: { x: 0, y: 0, zoom: 1.0 },\n            is_dragging: false,\n            \n            // Feature configuration (elegant control)\n            enable_drag: true,\n            enable_pan: true,\n            enable_zoom: true,\n            enable_animations: true,\n            animation_duration: 300,\n            \n            // Style configuration (elegant theming)\n            style_config: {}\n        };\n    }\n    \n    static serializers: ISerializers = {\n        ...DOMWidgetModel.serializers,\n        // Custom serializers for complex data types if needed\n    };\n    \n    static model_name = 'GroggyGraphModel';\n    static model_module = MODULE_NAME;\n    static model_module_version = MODULE_VERSION;\n    static view_name = 'GroggyGraphView';\n    static view_module = MODULE_NAME;\n    static view_module_version = MODULE_VERSION;\n}\n\n/**\n * Elegant Graph View - Pure visual interface\n */\nexport class GroggyGraphView extends DOMWidgetView {\n    private groggyView: JupyterGroggyView | null = null;\n    \n    /**\n     * Elegant rendering - minimal setup, maximum power\n     */\n    render(): void {\n        // Create elegant container\n        this.el.classList.add('groggy-widget-container');\n        this.el.style.cssText = `\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            background: #fafafa;\n            position: relative;\n            overflow: hidden;\n        `;\n        \n        // Initialize our elegant core bridge\n        this.groggyView = new JupyterGroggyView(this.el, this.model);\n        \n        // Set up elegant message handling\n        this.model.on('msg:custom', this.handleCustomMessage, this);\n        \n        // Elegant initialization\n        this.groggyView.initialize();\n        \n        console.log('✨ Elegant Groggy widget rendered');\n    }\n    \n    /**\n     * Elegant custom message handling\n     */\n    private handleCustomMessage(content: any): void {\n        if (this.groggyView) {\n            this.groggyView.handleCustomMessage(content);\n        }\n    }\n    \n    /**\n     * Elegant cleanup\n     */\n    remove(): void {\n        if (this.groggyView) {\n            this.groggyView.destroy();\n            this.groggyView = null;\n        }\n        \n        super.remove();\n    }\n    \n    /**\n     * Elegant resize handling\n     */\n    onResize(): void {\n        // Automatic resize handling through model sync - elegant!\n        if (this.groggyView) {\n            const width = this.el.clientWidth;\n            const height = this.el.clientHeight;\n            \n            if (width > 0 && height > 0) {\n                this.model.set('width', width);\n                this.model.set('height', height);\n                this.model.save_changes();\n            }\n        }\n    }\n}","/**\n * Elegant Main Export - Groggy Widget Module\n * \n * This is the primary entry point for the groggy-widget npm package.\n * Exports all widget classes for Jupyter extension discovery.\n */\n\n// Core widget classes that Jupyter needs to find\nexport { GroggyGraphModel, GroggyGraphView, MODULE_NAME, MODULE_VERSION } from './widget';\n\n// Module metadata for Jupyter\nexport const version = '0.1.0';"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__55__","constructor","container","config","this","width","height","layout","theme","enableDrag","enablePan","enableZoom","animationDuration","nodes","edges","positions","selectedNodes","hoveredNode","camera","x","y","zoom","isDragging","dragNode","isPanning","lastMouse","callbacks","nodeClick","nodeHover","nodeDoubleClick","layoutChange","cameraChange","selectionChange","init","canvas","document","createElement","style","border","cursor","display","ctx","getContext","appendChild","createControls","setupEventListeners","console","log","controlsDiv","cssText","layoutBtn","textContent","onclick","toggleLayout","resetBtn","replace","resetCamera","themeBtn","toggleTheme","insertBefore","infoPanel","position","addEventListener","onMouseDown","bind","onMouseMove","onMouseUp","onClick","onDoubleClick","onWheel","onMouseLeave","setData","calculateLayout","render","length","setLayout","algorithm","animate","oldLayout","animateLayoutChange","trigger","from","to","setTheme","selectNodes","nodeIds","clearExisting","Set","focusOnNode","nodeId","zoomLevel","node","find","n","id","pos","p","e","rect","getBoundingClientRect","clientX","left","clientY","top","clickedNode","findNodeAt","label","ctrlKey","metaKey","includes","filter","push","nodeData","preventDefault","mouseX","mouseY","zoomFactor","deltaY","newZoom","Math","max","min","radius","size","dx","dy","layouts","currentIndex","indexOf","nextLayout","themes","nextTheme","padding","centerX","centerY","forEach","i","angle","PI","cos","sin","map","random","iter","j","distance","sqrt","force","edge","src","source","dst","target","cols","ceil","cellW","cellH","floor","oldPositions","newPositions","startTime","Date","now","duration","progress","oldPos","newPos","requestAnimationFrame","clearRect","save","translate","scale","drawEdges","drawNodes","restore","drawStats","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","isSelected","isHovered","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","fillStyle","color","arc","fill","font","textAlign","fillText","stats","toFixed","on","event","callback","data","error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","GroggyGraphView","JupyterGroggyView","element","model","syncCallbacks","Map","coreView","extractCoreConfig","setupElegantSync","syncFromCore","syncFromJupyter","send","type","node_id","node_data","set","save_changes","selectedIds","cameraThrottle","clearTimeout","setTimeout","updateCorePositions","updateCoreSize","handleCustomMessage","content","warn","entries","findNodeElement","animateNodePosition","targetPos","animateNodeTo","resize","initialize","keys","destroy","MODULE_NAME","MODULE_VERSION","GroggyGraphModel","DOMWidgetModel","defaults","super","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","node_positions","layout_algorithm","title","selected_nodes","hovered_node","camera_position","is_dragging","enable_drag","enable_pan","enable_zoom","enable_animations","animation_duration","style_config","serializers","DOMWidgetView","groggyView","el","classList","add","remove","onResize","clientWidth","clientHeight","version"],"sourceRoot":""}